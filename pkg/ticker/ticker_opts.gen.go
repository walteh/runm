// Code generated by options-gen v0.52.1. DO NOT EDIT.

package ticker

import (
	"context"
	"log/slog"
	"time"
)

type TickerOpt func(o *TickerOpts)

func newTickerOpts(
	options ...TickerOpt,
) TickerOpts {
	var o TickerOpts

	// Setting defaults from field tag (if present)

	o.interval, _ = time.ParseDuration("1s")
	o.startBurst = 5
	o.logLevel = slog.Level(-4)
	o.frequency = 60
	o.message = "ticker running"
	o.callerSkip = 1

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func WithInterval(opt time.Duration) TickerOpt {
	return func(o *TickerOpts) { o.interval = opt }
}

func WithStartBurst(opt int) TickerOpt {
	return func(o *TickerOpts) { o.startBurst = opt }
}

func WithLogLevel(opt slog.Level) TickerOpt {
	return func(o *TickerOpts) { o.logLevel = opt }
}

func WithFrequency(opt int) TickerOpt {
	return func(o *TickerOpts) { o.frequency = opt }
}

func WithMessage(opt string) TickerOpt {
	return func(o *TickerOpts) { o.message = opt }
}

func WithAttrFunc(opt func() []slog.Attr) TickerOpt {
	return func(o *TickerOpts) { o.attrFunc = opt }
}

func WithDoneMessage(opt string) TickerOpt {
	return func(o *TickerOpts) { o.doneMessage = opt }
}

func WithStartMessage(opt string) TickerOpt {
	return func(o *TickerOpts) { o.startMessage = opt }
}

func WithCallerSkip(opt int) TickerOpt {
	return func(o *TickerOpts) { o.callerSkip = opt }
}

func WithCallerUintptr(opt uintptr) TickerOpt {
	return func(o *TickerOpts) { o.callerUintptr = opt }
}

func WithSlogBaseContext(opt context.Context) TickerOpt {
	return func(o *TickerOpts) { o.slogBaseContext = opt }
}

func WithMessageFunc(opt func() string) TickerOpt {
	return func(o *TickerOpts) { o.messageFunc = opt }
}

func (o *TickerOpts) Validate() error {
	return nil
}

// Public getter methods for private fields

func (o TickerOpts) Interval() time.Duration { return o.interval }

func (o TickerOpts) StartBurst() int { return o.startBurst }

func (o TickerOpts) LogLevel() slog.Level { return o.logLevel }

func (o TickerOpts) Frequency() int { return o.frequency }

func (o TickerOpts) Message() string { return o.message }

func (o TickerOpts) AttrFunc() func() []slog.Attr { return o.attrFunc }

func (o TickerOpts) DoneMessage() string { return o.doneMessage }

func (o TickerOpts) StartMessage() string { return o.startMessage }

func (o TickerOpts) CallerSkip() int { return o.callerSkip }

func (o TickerOpts) CallerUintptr() uintptr { return o.callerUintptr }

func (o TickerOpts) SlogBaseContext() context.Context { return o.slogBaseContext }

func (o TickerOpts) MessageFunc() func() string { return o.messageFunc }
