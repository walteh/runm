// Code generated by options-gen v0.52.1. DO NOT EDIT.

package logging

import (
	"io"
	"log/slog"
)

type OptLoggerOptsSetter func(o *LoggerOpts)

func NewLoggerOpts(
	options ...OptLoggerOptsSetter,
) LoggerOpts {
	var o LoggerOpts

	// Setting defaults from field tag (if present)

	for _, opt := range options {
		opt(&o)
	}
	return o
}

func WithHandlerOptions(opt *slog.HandlerOptions) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.handlerOptions = opt }
}

func WithFallbackWriter(opt io.Writer) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.fallbackWriter = opt }
}

func WithProcessName(opt string) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.processName = opt }
}

func WithReplacers(opt []SlogReplacer) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.replacers = opt }
}

func WithHandlers(opt []slog.Handler) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.handlers = opt }
}

func WithMakeDefaultLogger(opt bool) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.makeDefaultLogger = opt }
}

func WithInterceptLogrus(opt bool) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.interceptLogrus = opt }
}

func WithRawWriter(opt io.Writer) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.rawWriter = opt }
}

// delimitedLogWriter io.Writer
func WithEnableDelimiter(opt bool) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.enableDelimiter = opt }
}

func WithDelimiter(opt rune) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.delimiter = opt }
}

func WithInterceptHclog(opt bool) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.interceptHclog = opt }
}

func WithValues(opt []slog.Attr) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.values = opt }
}

func WithGlobalLogWriter(opt io.Writer) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.globalLogWriter = opt }
}

func WithOtlpInstances(opt *OTelInstances) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.otlpInstances = opt }
}

func WithDelayedHandlerCreatorOpts(opt []OptLoggerOptsSetter) OptLoggerOptsSetter {
	return func(o *LoggerOpts) { o.delayedHandlerCreatorOpts = opt }
}

func (o *LoggerOpts) Validate() error {
	return nil
}
