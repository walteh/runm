services:

  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  init:
    image: &tempoImage grafana/tempo:2.8.1
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo

  tempo:
    image: *tempoImage
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/var/tempo
    ports:
      - "3200" # tempo
      - "4317" # otlp grpc
    depends_on:
      - init

  # Generate fake traces...
#   k6-tracing:
#     image: ghcr.io/grafana/xk6-client-tracing:v0.0.7
#     environment:
#       - ENDPOINT=otel-collector:4317
#     restart: always
#     depends_on:
#       - otel-collector

#   # And put them in an OTEL collector pipeline...
#   otel-collector:
#     image: otel/opentelemetry-collector-contrib:0.128.0
#     command: [ "--config=/etc/otel-collector.yaml" ]
#     volumes:
#       - ./otel-collector.yaml:/etc/otel-collector.yaml

  alloy:
    image: grafana/alloy:latest
    volumes:
      - ./config.alloy:/etc/alloy/config.alloy
    command:
      - run
      - /etc/alloy/config.alloy
      - --storage.path=/var/lib/alloy/data
      - --server.http.listen-addr=0.0.0.0:12345
    ports:
      - "12345:12345"
      - "4319:4319"
      - "4317:4317"
      - "4318:4318"

  # Loki for logs collection
  loki:
    image: grafana/loki:3.5.0
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - ./loki-data/chunks:/loki/chunks
      - ./loki-data/rules:/loki/rules
      - ./loki-data/tsdb-index:/loki/tsdb-index
      - ./loki-data/tsdb-cache:/loki/tsdb-cache

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"

  pushgateway:
    image: prom/pushgateway:latest
    ports:
      - "9091:9091"

  grafana:
    image: grafana/grafana:12.0.2
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./grafana-data:/var/lib/grafana
    environment:
        - GF_AUTH_ANONYMOUS_ENABLED=true
        - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        - GF_AUTH_DISABLE_LOGIN_FORM=true
        - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
        - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=alloy-tempo
    ports:
      - "3000:3000"