apiVersion: 1

datasources:
  - name: Prometheus
    type: prometheus
    uid: prometheus
    access: proxy
    orgId: 1
    url: http://prometheus:9090
    basicAuth: false
    isDefault: false
    version: 1
    editable: false
    jsonData:
        httpMethod: GET

        # https://grafana.com/docs/grafana-cloud/connect-externally-hosted/data-sources/tempo/configure-tempo-data-source/
  - name: Tempo
    type: tempo
    uid: tempo
    url: http://tempo:3200
    access: proxy
    basicAuth: false
    jsonData:
        tracesToLogsV2:
            # Field with an internal link pointing to a logs data source in Grafana.
            # datasourceUid value must match the uid value of the logs data source.
            datasourceUid: 'loki'
            spanStartTimeShift: '-1h'
            spanEndTimeShift: '1h'
            tags: ['service.name']
            filterByTraceID: true
            filterBySpanID: true
            customQuery: true
            query: 'method="$${__span.tags.method}"'
        tracesToMetrics:
            datasourceUid: 'prometheus'
            spanStartTimeShift: '-1h'
            spanEndTimeShift: '1h'
            tags: [{key: 'service.name', value: 'service'}, {key: 'job'}]
            queries:
              - name: 'Sample query'
                query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
        serviceMap:
            datasourceUid: 'prometheus'
        nodeGraph:
            enabled: true
        search:
            hide: false
        traceQuery:
            timeShiftEnabled: true
            spanStartTimeShift: '-1h'
            spanEndTimeShift: '1h'
        spanBar:
            type: 'Tag'
            tag: 'http.path'
        streamingEnabled:
            search: true
  - name: Loki
    type: loki
    access: proxy
    orgId: 1
    url: http://loki:3100
    basicAuth: false
    isDefault: false
    version: 1
    editable: false
    apiVersion: 1
    uid: loki
    jsonData:
        httpMethod: GET
        derivedFields:
          - datasourceUid: tempo
            matcherRegex: "traceID=(\\w+)"
            name: TraceID
            url: "$${__value.raw}"
