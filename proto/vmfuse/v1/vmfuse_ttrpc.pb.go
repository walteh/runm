// Code generated by protoc-gen-go-ttrpc. DO NOT EDIT.
// source: vmfuse/v1/vmfuse.proto
package vmfusev1

import (
	context "context"
	ttrpc "github.com/containerd/ttrpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

type TTRPCVmfuseServiceService interface {
	Mount(context.Context, *MountRequest) (*MountResponse, error)
	Unmount(context.Context, *UnmountRequest) (*emptypb.Empty, error)
	List(context.Context, *emptypb.Empty) (*ListResponse, error)
	Status(context.Context, *StatusRequest) (*StatusResponse, error)
}

func RegisterTTRPCVmfuseServiceService(srv *ttrpc.Server, svc TTRPCVmfuseServiceService) {
	srv.RegisterService("github.com.walteh.runm.proto.vmfuse.v1.VmfuseService", &ttrpc.ServiceDesc{
		Methods: map[string]ttrpc.Method{
			"Mount": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
				var req MountRequest
				if err := unmarshal(&req); err != nil {
					return nil, err
				}
				return svc.Mount(ctx, &req)
			},
			"Unmount": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
				var req UnmountRequest
				if err := unmarshal(&req); err != nil {
					return nil, err
				}
				return svc.Unmount(ctx, &req)
			},
			"List": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
				var req emptypb.Empty
				if err := unmarshal(&req); err != nil {
					return nil, err
				}
				return svc.List(ctx, &req)
			},
			"Status": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
				var req StatusRequest
				if err := unmarshal(&req); err != nil {
					return nil, err
				}
				return svc.Status(ctx, &req)
			},
		},
	})
}

type ttrpcvmfuseserviceClient struct {
	client *ttrpc.Client
}

func NewTTRPCVmfuseServiceClient(client *ttrpc.Client) TTRPCVmfuseServiceService {
	return &ttrpcvmfuseserviceClient{
		client: client,
	}
}

func (c *ttrpcvmfuseserviceClient) Mount(ctx context.Context, req *MountRequest) (*MountResponse, error) {
	var resp MountResponse
	if err := c.client.Call(ctx, "github.com.walteh.runm.proto.vmfuse.v1.VmfuseService", "Mount", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *ttrpcvmfuseserviceClient) Unmount(ctx context.Context, req *UnmountRequest) (*emptypb.Empty, error) {
	var resp emptypb.Empty
	if err := c.client.Call(ctx, "github.com.walteh.runm.proto.vmfuse.v1.VmfuseService", "Unmount", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *ttrpcvmfuseserviceClient) List(ctx context.Context, req *emptypb.Empty) (*ListResponse, error) {
	var resp ListResponse
	if err := c.client.Call(ctx, "github.com.walteh.runm.proto.vmfuse.v1.VmfuseService", "List", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *ttrpcvmfuseserviceClient) Status(ctx context.Context, req *StatusRequest) (*StatusResponse, error) {
	var resp StatusResponse
	if err := c.client.Call(ctx, "github.com.walteh.runm.proto.vmfuse.v1.VmfuseService", "Status", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}
