// Code generated by protoc-gen-go-opaque-helpers. DO NOT EDIT.
// source: devlog/v1/dapmux.proto

package devlogv1

import (
	protovalidate "buf.build/go/protovalidate"
)

// NewStructuredLog creates a new StructuredLog using the builder
func NewStructuredLog(b *StructuredLog_builder) *StructuredLog {
	return b.Build()
}

// NewStructuredLogE creates a new StructuredLog using the builder with validation
func NewStructuredLogE(b *StructuredLog_builder) (*StructuredLog, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRawLog creates a new RawLog using the builder
func NewRawLog(b *RawLog_builder) *RawLog {
	return b.Build()
}

// NewRawLogE creates a new RawLog using the builder with validation
func NewRawLogE(b *RawLog_builder) (*RawLog, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewLogRequest creates a new LogRequest using the builder
func NewLogRequest(b *LogRequest_builder) *LogRequest {
	return b.Build()
}

// NewLogRequestE creates a new LogRequest using the builder with validation
func NewLogRequestE(b *LogRequest_builder) (*LogRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewLogRequest_WithStructured creates a new LogRequest with the Structured field set using the builder
func NewLogRequest_WithStructured(innerBuilder *StructuredLog_builder) *LogRequest {
	inner := NewStructuredLog(innerBuilder)
	return NewLogRequest(&LogRequest_builder{
		Structured: inner,
	})
}

// NewLogRequest_WithStructuredE creates a new LogRequest with the Structured field set using the builder with validation
func NewLogRequest_WithStructuredE(innerBuilder *StructuredLog_builder) (*LogRequest, error) {
	inner, err := NewStructuredLogE(innerBuilder)
	if err != nil {
		return nil, err
	}
	m := NewLogRequest(&LogRequest_builder{
		Structured: inner,
	})
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewLogRequest_WithRaw creates a new LogRequest with the Raw field set using the builder
func NewLogRequest_WithRaw(innerBuilder *RawLog_builder) *LogRequest {
	inner := NewRawLog(innerBuilder)
	return NewLogRequest(&LogRequest_builder{
		Raw: inner,
	})
}

// NewLogRequest_WithRawE creates a new LogRequest with the Raw field set using the builder with validation
func NewLogRequest_WithRawE(innerBuilder *RawLog_builder) (*LogRequest, error) {
	inner, err := NewRawLogE(innerBuilder)
	if err != nil {
		return nil, err
	}
	m := NewLogRequest(&LogRequest_builder{
		Raw: inner,
	})
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewLogResponse creates a new LogResponse using the builder
func NewLogResponse(b *LogResponse_builder) *LogResponse {
	return b.Build()
}

// NewLogResponseE creates a new LogResponse using the builder with validation
func NewLogResponseE(b *LogResponse_builder) (*LogResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}
