// Code generated by protoc-gen-go-ttrpc. DO NOT EDIT.
// source: devlog/v1/devlog.proto
package devlogv1

import (
	context "context"
	ttrpc "github.com/containerd/ttrpc"
)

type TTRPCDevlogServiceService interface {
	Log(context.Context, TTRPCDevlogService_LogServer) error
}

type TTRPCDevlogService_LogServer interface {
	Send(*LogResponse) error
	Recv() (*LogRequest, error)
	ttrpc.StreamServer
}

type ttrpcdevlogserviceLogServer struct {
	ttrpc.StreamServer
}

func (x *ttrpcdevlogserviceLogServer) Send(m *LogResponse) error {
	return x.StreamServer.SendMsg(m)
}

func (x *ttrpcdevlogserviceLogServer) Recv() (*LogRequest, error) {
	m := new(LogRequest)
	if err := x.StreamServer.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func RegisterTTRPCDevlogServiceService(srv *ttrpc.Server, svc TTRPCDevlogServiceService) {
	srv.RegisterService("runm.devlog.v1.DevlogService", &ttrpc.ServiceDesc{
		Streams: map[string]ttrpc.Stream{
			"Log": {
				Handler: func(ctx context.Context, stream ttrpc.StreamServer) (interface{}, error) {
					return nil, svc.Log(ctx, &ttrpcdevlogserviceLogServer{stream})
				},
				StreamingClient: true,
				StreamingServer: true,
			},
		},
	})
}

type TTRPCDevlogServiceClient interface {
	Log(context.Context) (TTRPCDevlogService_LogClient, error)
}

type ttrpcdevlogserviceClient struct {
	client *ttrpc.Client
}

func NewTTRPCDevlogServiceClient(client *ttrpc.Client) TTRPCDevlogServiceClient {
	return &ttrpcdevlogserviceClient{
		client: client,
	}
}

func (c *ttrpcdevlogserviceClient) Log(ctx context.Context) (TTRPCDevlogService_LogClient, error) {
	stream, err := c.client.NewStream(ctx, &ttrpc.StreamDesc{
		StreamingClient: true,
		StreamingServer: true,
	}, "runm.devlog.v1.DevlogService", "Log", nil)
	if err != nil {
		return nil, err
	}
	x := &ttrpcdevlogserviceLogClient{stream}
	return x, nil
}

type TTRPCDevlogService_LogClient interface {
	Send(*LogRequest) error
	Recv() (*LogResponse, error)
	ttrpc.ClientStream
}

type ttrpcdevlogserviceLogClient struct {
	ttrpc.ClientStream
}

func (x *ttrpcdevlogserviceLogClient) Send(m *LogRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *ttrpcdevlogserviceLogClient) Recv() (*LogResponse, error) {
	m := new(LogResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}
