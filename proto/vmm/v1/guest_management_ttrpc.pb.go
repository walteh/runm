// Code generated by protoc-gen-go-ttrpc. DO NOT EDIT.
// source: vmm/v1/guest_management.proto
package vmmv1

import (
	context "context"
	ttrpc "github.com/containerd/ttrpc"
)

type TTRPCGuestManagementServiceService interface {
	GuestTimeSync(context.Context, *GuestTimeSyncRequest) (*GuestTimeSyncResponse, error)
	GuestReadiness(context.Context, *GuestReadinessRequest) (*GuestReadinessResponse, error)
	GuestRunCommand(context.Context, *GuestRunCommandRequest) (*GuestRunCommandResponse, error)
}

func RegisterTTRPCGuestManagementServiceService(srv *ttrpc.Server, svc TTRPCGuestManagementServiceService) {
	srv.RegisterService("runm.vmm.v1.GuestManagementService", &ttrpc.ServiceDesc{
		Methods: map[string]ttrpc.Method{
			"GuestTimeSync": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
				var req GuestTimeSyncRequest
				if err := unmarshal(&req); err != nil {
					return nil, err
				}
				return svc.GuestTimeSync(ctx, &req)
			},
			"GuestReadiness": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
				var req GuestReadinessRequest
				if err := unmarshal(&req); err != nil {
					return nil, err
				}
				return svc.GuestReadiness(ctx, &req)
			},
			"GuestRunCommand": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
				var req GuestRunCommandRequest
				if err := unmarshal(&req); err != nil {
					return nil, err
				}
				return svc.GuestRunCommand(ctx, &req)
			},
		},
	})
}

type ttrpcguestmanagementserviceClient struct {
	client *ttrpc.Client
}

func NewTTRPCGuestManagementServiceClient(client *ttrpc.Client) TTRPCGuestManagementServiceService {
	return &ttrpcguestmanagementserviceClient{
		client: client,
	}
}

func (c *ttrpcguestmanagementserviceClient) GuestTimeSync(ctx context.Context, req *GuestTimeSyncRequest) (*GuestTimeSyncResponse, error) {
	var resp GuestTimeSyncResponse
	if err := c.client.Call(ctx, "runm.vmm.v1.GuestManagementService", "GuestTimeSync", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *ttrpcguestmanagementserviceClient) GuestReadiness(ctx context.Context, req *GuestReadinessRequest) (*GuestReadinessResponse, error) {
	var resp GuestReadinessResponse
	if err := c.client.Call(ctx, "runm.vmm.v1.GuestManagementService", "GuestReadiness", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}

func (c *ttrpcguestmanagementserviceClient) GuestRunCommand(ctx context.Context, req *GuestRunCommandRequest) (*GuestRunCommandResponse, error) {
	var resp GuestRunCommandResponse
	if err := c.client.Call(ctx, "runm.vmm.v1.GuestManagementService", "GuestRunCommand", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}
