// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: v1/simple_console.proto

package runvv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ConsoleChunk carries both data and control messages in a single stream
type ConsoleChunk struct {
	state                protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_ChunkType isConsoleChunk_ChunkType `protobuf_oneof:"chunk_type"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ConsoleChunk) Reset() {
	*x = ConsoleChunk{}
	mi := &file_v1_simple_console_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsoleChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsoleChunk) ProtoMessage() {}

func (x *ConsoleChunk) ProtoReflect() protoreflect.Message {
	mi := &file_v1_simple_console_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ConsoleChunk) GetData() []byte {
	if x != nil {
		if x, ok := x.xxx_hidden_ChunkType.(*consoleChunk_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *ConsoleChunk) GetControl() *ControlMessage {
	if x != nil {
		if x, ok := x.xxx_hidden_ChunkType.(*consoleChunk_Control); ok {
			return x.Control
		}
	}
	return nil
}

func (x *ConsoleChunk) SetData(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_ChunkType = &consoleChunk_Data{v}
}

func (x *ConsoleChunk) SetControl(v *ControlMessage) {
	if v == nil {
		x.xxx_hidden_ChunkType = nil
		return
	}
	x.xxx_hidden_ChunkType = &consoleChunk_Control{v}
}

func (x *ConsoleChunk) HasChunkType() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_ChunkType != nil
}

func (x *ConsoleChunk) HasData() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_ChunkType.(*consoleChunk_Data)
	return ok
}

func (x *ConsoleChunk) HasControl() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_ChunkType.(*consoleChunk_Control)
	return ok
}

func (x *ConsoleChunk) ClearChunkType() {
	x.xxx_hidden_ChunkType = nil
}

func (x *ConsoleChunk) ClearData() {
	if _, ok := x.xxx_hidden_ChunkType.(*consoleChunk_Data); ok {
		x.xxx_hidden_ChunkType = nil
	}
}

func (x *ConsoleChunk) ClearControl() {
	if _, ok := x.xxx_hidden_ChunkType.(*consoleChunk_Control); ok {
		x.xxx_hidden_ChunkType = nil
	}
}

const ConsoleChunk_ChunkType_not_set_case case_ConsoleChunk_ChunkType = 0
const ConsoleChunk_Data_case case_ConsoleChunk_ChunkType = 1
const ConsoleChunk_Control_case case_ConsoleChunk_ChunkType = 2

func (x *ConsoleChunk) WhichChunkType() case_ConsoleChunk_ChunkType {
	if x == nil {
		return ConsoleChunk_ChunkType_not_set_case
	}
	switch x.xxx_hidden_ChunkType.(type) {
	case *consoleChunk_Data:
		return ConsoleChunk_Data_case
	case *consoleChunk_Control:
		return ConsoleChunk_Control_case
	default:
		return ConsoleChunk_ChunkType_not_set_case
	}
}

type ConsoleChunk_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_ChunkType:
	// Raw PTY data
	Data []byte
	// Control messages
	Control *ControlMessage
	// -- end of xxx_hidden_ChunkType
}

func (b0 ConsoleChunk_builder) Build() *ConsoleChunk {
	m0 := &ConsoleChunk{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Data != nil {
		x.xxx_hidden_ChunkType = &consoleChunk_Data{b.Data}
	}
	if b.Control != nil {
		x.xxx_hidden_ChunkType = &consoleChunk_Control{b.Control}
	}
	return m0
}

type case_ConsoleChunk_ChunkType protoreflect.FieldNumber

func (x case_ConsoleChunk_ChunkType) String() string {
	md := file_v1_simple_console_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isConsoleChunk_ChunkType interface {
	isConsoleChunk_ChunkType()
}

type consoleChunk_Data struct {
	// Raw PTY data
	Data []byte `protobuf:"bytes,1,opt,name=data,oneof"`
}

type consoleChunk_Control struct {
	// Control messages
	Control *ControlMessage `protobuf:"bytes,2,opt,name=control,oneof"`
}

func (*consoleChunk_Data) isConsoleChunk_ChunkType() {}

func (*consoleChunk_Control) isConsoleChunk_ChunkType() {}

// Control messages for PTY management
type ControlMessage struct {
	state                  protoimpl.MessageState       `protogen:"opaque.v1"`
	xxx_hidden_MessageType isControlMessage_MessageType `protobuf_oneof:"message_type"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ControlMessage) Reset() {
	*x = ControlMessage{}
	mi := &file_v1_simple_console_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ControlMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlMessage) ProtoMessage() {}

func (x *ControlMessage) ProtoReflect() protoreflect.Message {
	mi := &file_v1_simple_console_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ControlMessage) GetResize() *WindowResize {
	if x != nil {
		if x, ok := x.xxx_hidden_MessageType.(*controlMessage_Resize); ok {
			return x.Resize
		}
	}
	return nil
}

func (x *ControlMessage) GetEnv() *EnvVar {
	if x != nil {
		if x, ok := x.xxx_hidden_MessageType.(*controlMessage_Env); ok {
			return x.Env
		}
	}
	return nil
}

func (x *ControlMessage) GetExit() *ExitStatus {
	if x != nil {
		if x, ok := x.xxx_hidden_MessageType.(*controlMessage_Exit); ok {
			return x.Exit
		}
	}
	return nil
}

func (x *ControlMessage) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.xxx_hidden_MessageType.(*controlMessage_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *ControlMessage) SetResize(v *WindowResize) {
	if v == nil {
		x.xxx_hidden_MessageType = nil
		return
	}
	x.xxx_hidden_MessageType = &controlMessage_Resize{v}
}

func (x *ControlMessage) SetEnv(v *EnvVar) {
	if v == nil {
		x.xxx_hidden_MessageType = nil
		return
	}
	x.xxx_hidden_MessageType = &controlMessage_Env{v}
}

func (x *ControlMessage) SetExit(v *ExitStatus) {
	if v == nil {
		x.xxx_hidden_MessageType = nil
		return
	}
	x.xxx_hidden_MessageType = &controlMessage_Exit{v}
}

func (x *ControlMessage) SetError(v *ErrorMessage) {
	if v == nil {
		x.xxx_hidden_MessageType = nil
		return
	}
	x.xxx_hidden_MessageType = &controlMessage_Error{v}
}

func (x *ControlMessage) HasMessageType() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_MessageType != nil
}

func (x *ControlMessage) HasResize() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_MessageType.(*controlMessage_Resize)
	return ok
}

func (x *ControlMessage) HasEnv() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_MessageType.(*controlMessage_Env)
	return ok
}

func (x *ControlMessage) HasExit() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_MessageType.(*controlMessage_Exit)
	return ok
}

func (x *ControlMessage) HasError() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_MessageType.(*controlMessage_Error)
	return ok
}

func (x *ControlMessage) ClearMessageType() {
	x.xxx_hidden_MessageType = nil
}

func (x *ControlMessage) ClearResize() {
	if _, ok := x.xxx_hidden_MessageType.(*controlMessage_Resize); ok {
		x.xxx_hidden_MessageType = nil
	}
}

func (x *ControlMessage) ClearEnv() {
	if _, ok := x.xxx_hidden_MessageType.(*controlMessage_Env); ok {
		x.xxx_hidden_MessageType = nil
	}
}

func (x *ControlMessage) ClearExit() {
	if _, ok := x.xxx_hidden_MessageType.(*controlMessage_Exit); ok {
		x.xxx_hidden_MessageType = nil
	}
}

func (x *ControlMessage) ClearError() {
	if _, ok := x.xxx_hidden_MessageType.(*controlMessage_Error); ok {
		x.xxx_hidden_MessageType = nil
	}
}

const ControlMessage_MessageType_not_set_case case_ControlMessage_MessageType = 0
const ControlMessage_Resize_case case_ControlMessage_MessageType = 1
const ControlMessage_Env_case case_ControlMessage_MessageType = 2
const ControlMessage_Exit_case case_ControlMessage_MessageType = 3
const ControlMessage_Error_case case_ControlMessage_MessageType = 4

func (x *ControlMessage) WhichMessageType() case_ControlMessage_MessageType {
	if x == nil {
		return ControlMessage_MessageType_not_set_case
	}
	switch x.xxx_hidden_MessageType.(type) {
	case *controlMessage_Resize:
		return ControlMessage_Resize_case
	case *controlMessage_Env:
		return ControlMessage_Env_case
	case *controlMessage_Exit:
		return ControlMessage_Exit_case
	case *controlMessage_Error:
		return ControlMessage_Error_case
	default:
		return ControlMessage_MessageType_not_set_case
	}
}

type ControlMessage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Fields of oneof xxx_hidden_MessageType:
	// Window resize (SIGWINCH)
	Resize *WindowResize
	// Environment variables
	Env *EnvVar
	// Exit codes
	Exit *ExitStatus
	// Error conditions
	Error *ErrorMessage
	// -- end of xxx_hidden_MessageType
}

func (b0 ControlMessage_builder) Build() *ControlMessage {
	m0 := &ControlMessage{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Resize != nil {
		x.xxx_hidden_MessageType = &controlMessage_Resize{b.Resize}
	}
	if b.Env != nil {
		x.xxx_hidden_MessageType = &controlMessage_Env{b.Env}
	}
	if b.Exit != nil {
		x.xxx_hidden_MessageType = &controlMessage_Exit{b.Exit}
	}
	if b.Error != nil {
		x.xxx_hidden_MessageType = &controlMessage_Error{b.Error}
	}
	return m0
}

type case_ControlMessage_MessageType protoreflect.FieldNumber

func (x case_ControlMessage_MessageType) String() string {
	md := file_v1_simple_console_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isControlMessage_MessageType interface {
	isControlMessage_MessageType()
}

type controlMessage_Resize struct {
	// Window resize (SIGWINCH)
	Resize *WindowResize `protobuf:"bytes,1,opt,name=resize,oneof"`
}

type controlMessage_Env struct {
	// Environment variables
	Env *EnvVar `protobuf:"bytes,2,opt,name=env,oneof"`
}

type controlMessage_Exit struct {
	// Exit codes
	Exit *ExitStatus `protobuf:"bytes,3,opt,name=exit,oneof"`
}

type controlMessage_Error struct {
	// Error conditions
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,oneof"`
}

func (*controlMessage_Resize) isControlMessage_MessageType() {}

func (*controlMessage_Env) isControlMessage_MessageType() {}

func (*controlMessage_Exit) isControlMessage_MessageType() {}

func (*controlMessage_Error) isControlMessage_MessageType() {}

type WindowResize struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Rows uint32                 `protobuf:"varint,1,opt,name=rows"`
	xxx_hidden_Cols uint32                 `protobuf:"varint,2,opt,name=cols"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WindowResize) Reset() {
	*x = WindowResize{}
	mi := &file_v1_simple_console_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WindowResize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindowResize) ProtoMessage() {}

func (x *WindowResize) ProtoReflect() protoreflect.Message {
	mi := &file_v1_simple_console_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *WindowResize) GetRows() uint32 {
	if x != nil {
		return x.xxx_hidden_Rows
	}
	return 0
}

func (x *WindowResize) GetCols() uint32 {
	if x != nil {
		return x.xxx_hidden_Cols
	}
	return 0
}

func (x *WindowResize) SetRows(v uint32) {
	x.xxx_hidden_Rows = v
}

func (x *WindowResize) SetCols(v uint32) {
	x.xxx_hidden_Cols = v
}

type WindowResize_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Rows uint32
	Cols uint32
}

func (b0 WindowResize_builder) Build() *WindowResize {
	m0 := &WindowResize{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Rows = b.Rows
	x.xxx_hidden_Cols = b.Cols
	return m0
}

type EnvVar struct {
	state            protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Key   string                 `protobuf:"bytes,1,opt,name=key"`
	xxx_hidden_Value string                 `protobuf:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EnvVar) Reset() {
	*x = EnvVar{}
	mi := &file_v1_simple_console_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvVar) ProtoMessage() {}

func (x *EnvVar) ProtoReflect() protoreflect.Message {
	mi := &file_v1_simple_console_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EnvVar) GetKey() string {
	if x != nil {
		return x.xxx_hidden_Key
	}
	return ""
}

func (x *EnvVar) GetValue() string {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return ""
}

func (x *EnvVar) SetKey(v string) {
	x.xxx_hidden_Key = v
}

func (x *EnvVar) SetValue(v string) {
	x.xxx_hidden_Value = v
}

type EnvVar_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Key   string
	Value string
}

func (b0 EnvVar_builder) Build() *EnvVar {
	m0 := &EnvVar{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Key = b.Key
	x.xxx_hidden_Value = b.Value
	return m0
}

type ExitStatus struct {
	state           protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Code int32                  `protobuf:"varint,1,opt,name=code"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ExitStatus) Reset() {
	*x = ExitStatus{}
	mi := &file_v1_simple_console_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExitStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitStatus) ProtoMessage() {}

func (x *ExitStatus) ProtoReflect() protoreflect.Message {
	mi := &file_v1_simple_console_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ExitStatus) GetCode() int32 {
	if x != nil {
		return x.xxx_hidden_Code
	}
	return 0
}

func (x *ExitStatus) SetCode(v int32) {
	x.xxx_hidden_Code = v
}

type ExitStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Code int32
}

func (b0 ExitStatus_builder) Build() *ExitStatus {
	m0 := &ExitStatus{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Code = b.Code
	return m0
}

type ErrorMessage struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Message string                 `protobuf:"bytes,1,opt,name=message"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	mi := &file_v1_simple_console_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_v1_simple_console_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ErrorMessage) GetMessage() string {
	if x != nil {
		return x.xxx_hidden_Message
	}
	return ""
}

func (x *ErrorMessage) SetMessage(v string) {
	x.xxx_hidden_Message = v
}

type ErrorMessage_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Message string
}

func (b0 ErrorMessage_builder) Build() *ErrorMessage {
	m0 := &ErrorMessage{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Message = b.Message
	return m0
}

// Simplified platform operations
type SimpleCopyConsoleRequest struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id     string                 `protobuf:"bytes,1,opt,name=id"`
	xxx_hidden_Stdin  string                 `protobuf:"bytes,2,opt,name=stdin"`
	xxx_hidden_Stdout string                 `protobuf:"bytes,3,opt,name=stdout"`
	xxx_hidden_Stderr string                 `protobuf:"bytes,4,opt,name=stderr"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SimpleCopyConsoleRequest) Reset() {
	*x = SimpleCopyConsoleRequest{}
	mi := &file_v1_simple_console_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleCopyConsoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleCopyConsoleRequest) ProtoMessage() {}

func (x *SimpleCopyConsoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_simple_console_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SimpleCopyConsoleRequest) GetId() string {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return ""
}

func (x *SimpleCopyConsoleRequest) GetStdin() string {
	if x != nil {
		return x.xxx_hidden_Stdin
	}
	return ""
}

func (x *SimpleCopyConsoleRequest) GetStdout() string {
	if x != nil {
		return x.xxx_hidden_Stdout
	}
	return ""
}

func (x *SimpleCopyConsoleRequest) GetStderr() string {
	if x != nil {
		return x.xxx_hidden_Stderr
	}
	return ""
}

func (x *SimpleCopyConsoleRequest) SetId(v string) {
	x.xxx_hidden_Id = v
}

func (x *SimpleCopyConsoleRequest) SetStdin(v string) {
	x.xxx_hidden_Stdin = v
}

func (x *SimpleCopyConsoleRequest) SetStdout(v string) {
	x.xxx_hidden_Stdout = v
}

func (x *SimpleCopyConsoleRequest) SetStderr(v string) {
	x.xxx_hidden_Stderr = v
}

type SimpleCopyConsoleRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id     string
	Stdin  string
	Stdout string
	Stderr string
}

func (b0 SimpleCopyConsoleRequest_builder) Build() *SimpleCopyConsoleRequest {
	m0 := &SimpleCopyConsoleRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	x.xxx_hidden_Stdin = b.Stdin
	x.xxx_hidden_Stdout = b.Stdout
	x.xxx_hidden_Stderr = b.Stderr
	return m0
}

type SimpleCopyConsoleResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Success bool                   `protobuf:"varint,1,opt,name=success"`
	xxx_hidden_Error   string                 `protobuf:"bytes,2,opt,name=error"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SimpleCopyConsoleResponse) Reset() {
	*x = SimpleCopyConsoleResponse{}
	mi := &file_v1_simple_console_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleCopyConsoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleCopyConsoleResponse) ProtoMessage() {}

func (x *SimpleCopyConsoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_simple_console_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SimpleCopyConsoleResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *SimpleCopyConsoleResponse) GetError() string {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return ""
}

func (x *SimpleCopyConsoleResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
}

func (x *SimpleCopyConsoleResponse) SetError(v string) {
	x.xxx_hidden_Error = v
}

type SimpleCopyConsoleResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Success bool
	Error   string
}

func (b0 SimpleCopyConsoleResponse_builder) Build() *SimpleCopyConsoleResponse {
	m0 := &SimpleCopyConsoleResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Success = b.Success
	x.xxx_hidden_Error = b.Error
	return m0
}

type SimpleShutdownConsoleRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id string                 `protobuf:"bytes,1,opt,name=id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleShutdownConsoleRequest) Reset() {
	*x = SimpleShutdownConsoleRequest{}
	mi := &file_v1_simple_console_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleShutdownConsoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleShutdownConsoleRequest) ProtoMessage() {}

func (x *SimpleShutdownConsoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_simple_console_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SimpleShutdownConsoleRequest) GetId() string {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return ""
}

func (x *SimpleShutdownConsoleRequest) SetId(v string) {
	x.xxx_hidden_Id = v
}

type SimpleShutdownConsoleRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Id string
}

func (b0 SimpleShutdownConsoleRequest_builder) Build() *SimpleShutdownConsoleRequest {
	m0 := &SimpleShutdownConsoleRequest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	return m0
}

type SimpleShutdownConsoleResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Success bool                   `protobuf:"varint,1,opt,name=success"`
	xxx_hidden_Error   string                 `protobuf:"bytes,2,opt,name=error"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SimpleShutdownConsoleResponse) Reset() {
	*x = SimpleShutdownConsoleResponse{}
	mi := &file_v1_simple_console_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleShutdownConsoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleShutdownConsoleResponse) ProtoMessage() {}

func (x *SimpleShutdownConsoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_simple_console_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SimpleShutdownConsoleResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *SimpleShutdownConsoleResponse) GetError() string {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return ""
}

func (x *SimpleShutdownConsoleResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
}

func (x *SimpleShutdownConsoleResponse) SetError(v string) {
	x.xxx_hidden_Error = v
}

type SimpleShutdownConsoleResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Success bool
	Error   string
}

func (b0 SimpleShutdownConsoleResponse_builder) Build() *SimpleShutdownConsoleResponse {
	m0 := &SimpleShutdownConsoleResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Success = b.Success
	x.xxx_hidden_Error = b.Error
	return m0
}

type SimpleClosePlatformRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleClosePlatformRequest) Reset() {
	*x = SimpleClosePlatformRequest{}
	mi := &file_v1_simple_console_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleClosePlatformRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleClosePlatformRequest) ProtoMessage() {}

func (x *SimpleClosePlatformRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_simple_console_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type SimpleClosePlatformRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 SimpleClosePlatformRequest_builder) Build() *SimpleClosePlatformRequest {
	m0 := &SimpleClosePlatformRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type SimpleClosePlatformResponse struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Success bool                   `protobuf:"varint,1,opt,name=success"`
	xxx_hidden_Error   string                 `protobuf:"bytes,2,opt,name=error"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SimpleClosePlatformResponse) Reset() {
	*x = SimpleClosePlatformResponse{}
	mi := &file_v1_simple_console_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleClosePlatformResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleClosePlatformResponse) ProtoMessage() {}

func (x *SimpleClosePlatformResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_simple_console_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *SimpleClosePlatformResponse) GetSuccess() bool {
	if x != nil {
		return x.xxx_hidden_Success
	}
	return false
}

func (x *SimpleClosePlatformResponse) GetError() string {
	if x != nil {
		return x.xxx_hidden_Error
	}
	return ""
}

func (x *SimpleClosePlatformResponse) SetSuccess(v bool) {
	x.xxx_hidden_Success = v
}

func (x *SimpleClosePlatformResponse) SetError(v string) {
	x.xxx_hidden_Error = v
}

type SimpleClosePlatformResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Success bool
	Error   string
}

func (b0 SimpleClosePlatformResponse_builder) Build() *SimpleClosePlatformResponse {
	m0 := &SimpleClosePlatformResponse{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Success = b.Success
	x.xxx_hidden_Error = b.Error
	return m0
}

var File_v1_simple_console_proto protoreflect.FileDescriptor

const file_v1_simple_console_proto_rawDesc = "" +
	"\n" +
	"\x17v1/simple_console.proto\x12\arunv.v1\x1a\x1bbuf/validate/validate.proto\x1a!google/protobuf/go_features.proto\"g\n" +
	"\fConsoleChunk\x12\x14\n" +
	"\x04data\x18\x01 \x01(\fH\x00R\x04data\x123\n" +
	"\acontrol\x18\x02 \x01(\v2\x17.runv.v1.ControlMessageH\x00R\acontrolB\f\n" +
	"\n" +
	"chunk_type\"\xd0\x01\n" +
	"\x0eControlMessage\x12/\n" +
	"\x06resize\x18\x01 \x01(\v2\x15.runv.v1.WindowResizeH\x00R\x06resize\x12#\n" +
	"\x03env\x18\x02 \x01(\v2\x0f.runv.v1.EnvVarH\x00R\x03env\x12)\n" +
	"\x04exit\x18\x03 \x01(\v2\x13.runv.v1.ExitStatusH\x00R\x04exit\x12-\n" +
	"\x05error\x18\x04 \x01(\v2\x15.runv.v1.ErrorMessageH\x00R\x05errorB\x0e\n" +
	"\fmessage_type\"6\n" +
	"\fWindowResize\x12\x12\n" +
	"\x04rows\x18\x01 \x01(\rR\x04rows\x12\x12\n" +
	"\x04cols\x18\x02 \x01(\rR\x04cols\"0\n" +
	"\x06EnvVar\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\" \n" +
	"\n" +
	"ExitStatus\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\"(\n" +
	"\fErrorMessage\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"p\n" +
	"\x18SimpleCopyConsoleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05stdin\x18\x02 \x01(\tR\x05stdin\x12\x16\n" +
	"\x06stdout\x18\x03 \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\x04 \x01(\tR\x06stderr\"K\n" +
	"\x19SimpleCopyConsoleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\".\n" +
	"\x1cSimpleShutdownConsoleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"O\n" +
	"\x1dSimpleShutdownConsoleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x1c\n" +
	"\x1aSimpleClosePlatformRequest\"M\n" +
	"\x1bSimpleClosePlatformResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error2\xf5\x02\n" +
	"\x14SimpleConsoleService\x12C\n" +
	"\rStreamConsole\x12\x15.runv.v1.ConsoleChunk\x1a\x15.runv.v1.ConsoleChunk\"\x00(\x010\x01\x12V\n" +
	"\vCopyConsole\x12!.runv.v1.SimpleCopyConsoleRequest\x1a\".runv.v1.SimpleCopyConsoleResponse\"\x00\x12b\n" +
	"\x0fShutdownConsole\x12%.runv.v1.SimpleShutdownConsoleRequest\x1a&.runv.v1.SimpleShutdownConsoleResponse\"\x00\x12\\\n" +
	"\rClosePlatform\x12#.runv.v1.SimpleClosePlatformRequest\x1a$.runv.v1.SimpleClosePlatformResponse\"\x00B\x90\x01\n" +
	"\vcom.runv.v1B\x12SimpleConsoleProtoP\x01Z&github.com/walteh/runv/proto/v1;runvv1\xa2\x02\x03RXX\xaa\x02\aRunv.V1\xca\x02\aRunv\\V1\xe2\x02\x13Runv\\V1\\GPBMetadata\xea\x02\bRunv::V1\x92\x03\a\xd2>\x02\x10\x03\b\x02b\beditionsp\xe8\a"

var file_v1_simple_console_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_v1_simple_console_proto_goTypes = []any{
	(*ConsoleChunk)(nil),                  // 0: runv.v1.ConsoleChunk
	(*ControlMessage)(nil),                // 1: runv.v1.ControlMessage
	(*WindowResize)(nil),                  // 2: runv.v1.WindowResize
	(*EnvVar)(nil),                        // 3: runv.v1.EnvVar
	(*ExitStatus)(nil),                    // 4: runv.v1.ExitStatus
	(*ErrorMessage)(nil),                  // 5: runv.v1.ErrorMessage
	(*SimpleCopyConsoleRequest)(nil),      // 6: runv.v1.SimpleCopyConsoleRequest
	(*SimpleCopyConsoleResponse)(nil),     // 7: runv.v1.SimpleCopyConsoleResponse
	(*SimpleShutdownConsoleRequest)(nil),  // 8: runv.v1.SimpleShutdownConsoleRequest
	(*SimpleShutdownConsoleResponse)(nil), // 9: runv.v1.SimpleShutdownConsoleResponse
	(*SimpleClosePlatformRequest)(nil),    // 10: runv.v1.SimpleClosePlatformRequest
	(*SimpleClosePlatformResponse)(nil),   // 11: runv.v1.SimpleClosePlatformResponse
}
var file_v1_simple_console_proto_depIdxs = []int32{
	1,  // 0: runv.v1.ConsoleChunk.control:type_name -> runv.v1.ControlMessage
	2,  // 1: runv.v1.ControlMessage.resize:type_name -> runv.v1.WindowResize
	3,  // 2: runv.v1.ControlMessage.env:type_name -> runv.v1.EnvVar
	4,  // 3: runv.v1.ControlMessage.exit:type_name -> runv.v1.ExitStatus
	5,  // 4: runv.v1.ControlMessage.error:type_name -> runv.v1.ErrorMessage
	0,  // 5: runv.v1.SimpleConsoleService.StreamConsole:input_type -> runv.v1.ConsoleChunk
	6,  // 6: runv.v1.SimpleConsoleService.CopyConsole:input_type -> runv.v1.SimpleCopyConsoleRequest
	8,  // 7: runv.v1.SimpleConsoleService.ShutdownConsole:input_type -> runv.v1.SimpleShutdownConsoleRequest
	10, // 8: runv.v1.SimpleConsoleService.ClosePlatform:input_type -> runv.v1.SimpleClosePlatformRequest
	0,  // 9: runv.v1.SimpleConsoleService.StreamConsole:output_type -> runv.v1.ConsoleChunk
	7,  // 10: runv.v1.SimpleConsoleService.CopyConsole:output_type -> runv.v1.SimpleCopyConsoleResponse
	9,  // 11: runv.v1.SimpleConsoleService.ShutdownConsole:output_type -> runv.v1.SimpleShutdownConsoleResponse
	11, // 12: runv.v1.SimpleConsoleService.ClosePlatform:output_type -> runv.v1.SimpleClosePlatformResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_v1_simple_console_proto_init() }
func file_v1_simple_console_proto_init() {
	if File_v1_simple_console_proto != nil {
		return
	}
	file_v1_simple_console_proto_msgTypes[0].OneofWrappers = []any{
		(*consoleChunk_Data)(nil),
		(*consoleChunk_Control)(nil),
	}
	file_v1_simple_console_proto_msgTypes[1].OneofWrappers = []any{
		(*controlMessage_Resize)(nil),
		(*controlMessage_Env)(nil),
		(*controlMessage_Exit)(nil),
		(*controlMessage_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_simple_console_proto_rawDesc), len(file_v1_simple_console_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_simple_console_proto_goTypes,
		DependencyIndexes: file_v1_simple_console_proto_depIdxs,
		MessageInfos:      file_v1_simple_console_proto_msgTypes,
	}.Build()
	File_v1_simple_console_proto = out.File
	file_v1_simple_console_proto_goTypes = nil
	file_v1_simple_console_proto_depIdxs = nil
}
