// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: v1/console.proto

package runvv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PollRequest struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionId   *string                `protobuf:"bytes,1,opt,name=session_id,json=sessionId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PollRequest) Reset() {
	*x = PollRequest{}
	mi := &file_v1_console_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollRequest) ProtoMessage() {}

func (x *PollRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_console_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PollRequest) GetSessionId() string {
	if x != nil {
		if x.xxx_hidden_SessionId != nil {
			return *x.xxx_hidden_SessionId
		}
		return ""
	}
	return ""
}

func (x *PollRequest) SetSessionId(v string) {
	x.xxx_hidden_SessionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *PollRequest) HasSessionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PollRequest) ClearSessionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SessionId = nil
}

type PollRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SessionId *string
}

func (b0 PollRequest_builder) Build() *PollRequest {
	m0 := &PollRequest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SessionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_SessionId = b.SessionId
	}
	return m0
}

type PollResponse struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SessionId   *string                `protobuf:"bytes,1,opt,name=session_id,json=sessionId"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *PollResponse) Reset() {
	*x = PollResponse{}
	mi := &file_v1_console_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollResponse) ProtoMessage() {}

func (x *PollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_console_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *PollResponse) GetSessionId() string {
	if x != nil {
		if x.xxx_hidden_SessionId != nil {
			return *x.xxx_hidden_SessionId
		}
		return ""
	}
	return ""
}

func (x *PollResponse) SetSessionId(v string) {
	x.xxx_hidden_SessionId = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 1)
}

func (x *PollResponse) HasSessionId() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *PollResponse) ClearSessionId() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_SessionId = nil
}

type PollResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SessionId *string
}

func (b0 PollResponse_builder) Build() *PollResponse {
	m0 := &PollResponse{}
	b, x := &b0, m0
	_, _ = b, x
	if b.SessionId != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 1)
		x.xxx_hidden_SessionId = b.SessionId
	}
	return m0
}

var File_v1_console_proto protoreflect.FileDescriptor

const file_v1_console_proto_rawDesc = "" +
	"\n" +
	"\x10v1/console.proto\x12\arunv.v1\x1a\x1bbuf/validate/validate.proto\x1a!google/protobuf/go_features.proto\"6\n" +
	"\vPollRequest\x12'\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\tsessionId\"7\n" +
	"\fPollResponse\x12'\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tB\b\xbaH\x05r\x03\xb0\x01\x01R\tsessionId2L\n" +
	"\x13ConsoleProxyService\x125\n" +
	"\x04Poll\x12\x14.runv.v1.PollRequest\x1a\x15.runv.v1.PollResponse\"\x00B\x88\x01\n" +
	"\vcom.runv.v1B\fConsoleProtoP\x01Z&github.com/walteh/runv/proto/v1;runvv1\xa2\x02\x03RXX\xaa\x02\aRunv.V1\xca\x02\aRunv\\V1\xe2\x02\x13Runv\\V1\\GPBMetadata\xea\x02\bRunv::V1\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_v1_console_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_v1_console_proto_goTypes = []any{
	(*PollRequest)(nil),  // 0: runv.v1.PollRequest
	(*PollResponse)(nil), // 1: runv.v1.PollResponse
}
var file_v1_console_proto_depIdxs = []int32{
	0, // 0: runv.v1.ConsoleProxyService.Poll:input_type -> runv.v1.PollRequest
	1, // 1: runv.v1.ConsoleProxyService.Poll:output_type -> runv.v1.PollResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v1_console_proto_init() }
func file_v1_console_proto_init() {
	if File_v1_console_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_console_proto_rawDesc), len(file_v1_console_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_console_proto_goTypes,
		DependencyIndexes: file_v1_console_proto_depIdxs,
		MessageInfos:      file_v1_console_proto_msgTypes,
	}.Build()
	File_v1_console_proto = out.File
	file_v1_console_proto_goTypes = nil
	file_v1_console_proto_depIdxs = nil
}
