// Code generated by protoc-gen-go-opaque-helpers. DO NOT EDIT.
// source: v1/runc.proto

package runvv1

import (
	protovalidate "buf.build/go/protovalidate"
)

// NewRuncLogFilePathRequest creates a new RuncLogFilePathRequest using the builder
func NewRuncLogFilePathRequest(b *RuncLogFilePathRequest_builder) *RuncLogFilePathRequest {
	return b.Build()
}

// NewRuncLogFilePathRequestE creates a new RuncLogFilePathRequest using the builder with validation
func NewRuncLogFilePathRequestE(b *RuncLogFilePathRequest_builder) (*RuncLogFilePathRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncLogFilePathResponse creates a new RuncLogFilePathResponse using the builder
func NewRuncLogFilePathResponse(b *RuncLogFilePathResponse_builder) *RuncLogFilePathResponse {
	return b.Build()
}

// NewRuncLogFilePathResponseE creates a new RuncLogFilePathResponse using the builder with validation
func NewRuncLogFilePathResponseE(b *RuncLogFilePathResponse_builder) (*RuncLogFilePathResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewPingRequest creates a new PingRequest using the builder
func NewPingRequest(b *PingRequest_builder) *PingRequest {
	return b.Build()
}

// NewPingRequestE creates a new PingRequest using the builder with validation
func NewPingRequestE(b *PingRequest_builder) (*PingRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewPingResponse creates a new PingResponse using the builder
func NewPingResponse(b *PingResponse_builder) *PingResponse {
	return b.Build()
}

// NewPingResponseE creates a new PingResponse using the builder with validation
func NewPingResponseE(b *PingResponse_builder) (*PingResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncListRequest creates a new RuncListRequest using the builder
func NewRuncListRequest(b *RuncListRequest_builder) *RuncListRequest {
	return b.Build()
}

// NewRuncListRequestE creates a new RuncListRequest using the builder with validation
func NewRuncListRequestE(b *RuncListRequest_builder) (*RuncListRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncContainer creates a new RuncContainer using the builder
func NewRuncContainer(b *RuncContainer_builder) *RuncContainer {
	return b.Build()
}

// NewRuncContainerE creates a new RuncContainer using the builder with validation
func NewRuncContainerE(b *RuncContainer_builder) (*RuncContainer, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncListResponse creates a new RuncListResponse using the builder
func NewRuncListResponse(b *RuncListResponse_builder) *RuncListResponse {
	return b.Build()
}

// NewRuncListResponseE creates a new RuncListResponse using the builder with validation
func NewRuncListResponseE(b *RuncListResponse_builder) (*RuncListResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncStateRequest creates a new RuncStateRequest using the builder
func NewRuncStateRequest(b *RuncStateRequest_builder) *RuncStateRequest {
	return b.Build()
}

// NewRuncStateRequestE creates a new RuncStateRequest using the builder with validation
func NewRuncStateRequestE(b *RuncStateRequest_builder) (*RuncStateRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncStateResponse creates a new RuncStateResponse using the builder
func NewRuncStateResponse(b *RuncStateResponse_builder) *RuncStateResponse {
	return b.Build()
}

// NewRuncStateResponseE creates a new RuncStateResponse using the builder with validation
func NewRuncStateResponseE(b *RuncStateResponse_builder) (*RuncStateResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncCreateRequest creates a new RuncCreateRequest using the builder
func NewRuncCreateRequest(b *RuncCreateRequest_builder) *RuncCreateRequest {
	return b.Build()
}

// NewRuncCreateRequestE creates a new RuncCreateRequest using the builder with validation
func NewRuncCreateRequestE(b *RuncCreateRequest_builder) (*RuncCreateRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncCreateOptions creates a new RuncCreateOptions using the builder
func NewRuncCreateOptions(b *RuncCreateOptions_builder) *RuncCreateOptions {
	return b.Build()
}

// NewRuncCreateOptionsE creates a new RuncCreateOptions using the builder with validation
func NewRuncCreateOptionsE(b *RuncCreateOptions_builder) (*RuncCreateOptions, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncCreateResponse creates a new RuncCreateResponse using the builder
func NewRuncCreateResponse(b *RuncCreateResponse_builder) *RuncCreateResponse {
	return b.Build()
}

// NewRuncCreateResponseE creates a new RuncCreateResponse using the builder with validation
func NewRuncCreateResponseE(b *RuncCreateResponse_builder) (*RuncCreateResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncStartRequest creates a new RuncStartRequest using the builder
func NewRuncStartRequest(b *RuncStartRequest_builder) *RuncStartRequest {
	return b.Build()
}

// NewRuncStartRequestE creates a new RuncStartRequest using the builder with validation
func NewRuncStartRequestE(b *RuncStartRequest_builder) (*RuncStartRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncStartResponse creates a new RuncStartResponse using the builder
func NewRuncStartResponse(b *RuncStartResponse_builder) *RuncStartResponse {
	return b.Build()
}

// NewRuncStartResponseE creates a new RuncStartResponse using the builder with validation
func NewRuncStartResponseE(b *RuncStartResponse_builder) (*RuncStartResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncExecRequest creates a new RuncExecRequest using the builder
func NewRuncExecRequest(b *RuncExecRequest_builder) *RuncExecRequest {
	return b.Build()
}

// NewRuncExecRequestE creates a new RuncExecRequest using the builder with validation
func NewRuncExecRequestE(b *RuncExecRequest_builder) (*RuncExecRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncProcessSpec creates a new RuncProcessSpec using the builder
func NewRuncProcessSpec(b *RuncProcessSpec_builder) *RuncProcessSpec {
	return b.Build()
}

// NewRuncProcessSpecE creates a new RuncProcessSpec using the builder with validation
func NewRuncProcessSpecE(b *RuncProcessSpec_builder) (*RuncProcessSpec, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncExecOptions creates a new RuncExecOptions using the builder
func NewRuncExecOptions(b *RuncExecOptions_builder) *RuncExecOptions {
	return b.Build()
}

// NewRuncExecOptionsE creates a new RuncExecOptions using the builder with validation
func NewRuncExecOptionsE(b *RuncExecOptions_builder) (*RuncExecOptions, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncExecResponse creates a new RuncExecResponse using the builder
func NewRuncExecResponse(b *RuncExecResponse_builder) *RuncExecResponse {
	return b.Build()
}

// NewRuncExecResponseE creates a new RuncExecResponse using the builder with validation
func NewRuncExecResponseE(b *RuncExecResponse_builder) (*RuncExecResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncRunRequest creates a new RuncRunRequest using the builder
func NewRuncRunRequest(b *RuncRunRequest_builder) *RuncRunRequest {
	return b.Build()
}

// NewRuncRunRequestE creates a new RuncRunRequest using the builder with validation
func NewRuncRunRequestE(b *RuncRunRequest_builder) (*RuncRunRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncRunResponse creates a new RuncRunResponse using the builder
func NewRuncRunResponse(b *RuncRunResponse_builder) *RuncRunResponse {
	return b.Build()
}

// NewRuncRunResponseE creates a new RuncRunResponse using the builder with validation
func NewRuncRunResponseE(b *RuncRunResponse_builder) (*RuncRunResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncDeleteRequest creates a new RuncDeleteRequest using the builder
func NewRuncDeleteRequest(b *RuncDeleteRequest_builder) *RuncDeleteRequest {
	return b.Build()
}

// NewRuncDeleteRequestE creates a new RuncDeleteRequest using the builder with validation
func NewRuncDeleteRequestE(b *RuncDeleteRequest_builder) (*RuncDeleteRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncDeleteOptions creates a new RuncDeleteOptions using the builder
func NewRuncDeleteOptions(b *RuncDeleteOptions_builder) *RuncDeleteOptions {
	return b.Build()
}

// NewRuncDeleteOptionsE creates a new RuncDeleteOptions using the builder with validation
func NewRuncDeleteOptionsE(b *RuncDeleteOptions_builder) (*RuncDeleteOptions, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncDeleteResponse creates a new RuncDeleteResponse using the builder
func NewRuncDeleteResponse(b *RuncDeleteResponse_builder) *RuncDeleteResponse {
	return b.Build()
}

// NewRuncDeleteResponseE creates a new RuncDeleteResponse using the builder with validation
func NewRuncDeleteResponseE(b *RuncDeleteResponse_builder) (*RuncDeleteResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncKillRequest creates a new RuncKillRequest using the builder
func NewRuncKillRequest(b *RuncKillRequest_builder) *RuncKillRequest {
	return b.Build()
}

// NewRuncKillRequestE creates a new RuncKillRequest using the builder with validation
func NewRuncKillRequestE(b *RuncKillRequest_builder) (*RuncKillRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncKillOptions creates a new RuncKillOptions using the builder
func NewRuncKillOptions(b *RuncKillOptions_builder) *RuncKillOptions {
	return b.Build()
}

// NewRuncKillOptionsE creates a new RuncKillOptions using the builder with validation
func NewRuncKillOptionsE(b *RuncKillOptions_builder) (*RuncKillOptions, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncKillResponse creates a new RuncKillResponse using the builder
func NewRuncKillResponse(b *RuncKillResponse_builder) *RuncKillResponse {
	return b.Build()
}

// NewRuncKillResponseE creates a new RuncKillResponse using the builder with validation
func NewRuncKillResponseE(b *RuncKillResponse_builder) (*RuncKillResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncStatsRequest creates a new RuncStatsRequest using the builder
func NewRuncStatsRequest(b *RuncStatsRequest_builder) *RuncStatsRequest {
	return b.Build()
}

// NewRuncStatsRequestE creates a new RuncStatsRequest using the builder with validation
func NewRuncStatsRequestE(b *RuncStatsRequest_builder) (*RuncStatsRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncCpuUsage creates a new RuncCpuUsage using the builder
func NewRuncCpuUsage(b *RuncCpuUsage_builder) *RuncCpuUsage {
	return b.Build()
}

// NewRuncCpuUsageE creates a new RuncCpuUsage using the builder with validation
func NewRuncCpuUsageE(b *RuncCpuUsage_builder) (*RuncCpuUsage, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncThrottling creates a new RuncThrottling using the builder
func NewRuncThrottling(b *RuncThrottling_builder) *RuncThrottling {
	return b.Build()
}

// NewRuncThrottlingE creates a new RuncThrottling using the builder with validation
func NewRuncThrottlingE(b *RuncThrottling_builder) (*RuncThrottling, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncCpu creates a new RuncCpu using the builder
func NewRuncCpu(b *RuncCpu_builder) *RuncCpu {
	return b.Build()
}

// NewRuncCpuE creates a new RuncCpu using the builder with validation
func NewRuncCpuE(b *RuncCpu_builder) (*RuncCpu, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncMemoryEntry creates a new RuncMemoryEntry using the builder
func NewRuncMemoryEntry(b *RuncMemoryEntry_builder) *RuncMemoryEntry {
	return b.Build()
}

// NewRuncMemoryEntryE creates a new RuncMemoryEntry using the builder with validation
func NewRuncMemoryEntryE(b *RuncMemoryEntry_builder) (*RuncMemoryEntry, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncMemory creates a new RuncMemory using the builder
func NewRuncMemory(b *RuncMemory_builder) *RuncMemory {
	return b.Build()
}

// NewRuncMemoryE creates a new RuncMemory using the builder with validation
func NewRuncMemoryE(b *RuncMemory_builder) (*RuncMemory, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncPids creates a new RuncPids using the builder
func NewRuncPids(b *RuncPids_builder) *RuncPids {
	return b.Build()
}

// NewRuncPidsE creates a new RuncPids using the builder with validation
func NewRuncPidsE(b *RuncPids_builder) (*RuncPids, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncBlkioEntry creates a new RuncBlkioEntry using the builder
func NewRuncBlkioEntry(b *RuncBlkioEntry_builder) *RuncBlkioEntry {
	return b.Build()
}

// NewRuncBlkioEntryE creates a new RuncBlkioEntry using the builder with validation
func NewRuncBlkioEntryE(b *RuncBlkioEntry_builder) (*RuncBlkioEntry, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncBlkio creates a new RuncBlkio using the builder
func NewRuncBlkio(b *RuncBlkio_builder) *RuncBlkio {
	return b.Build()
}

// NewRuncBlkioE creates a new RuncBlkio using the builder with validation
func NewRuncBlkioE(b *RuncBlkio_builder) (*RuncBlkio, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncHugetlb creates a new RuncHugetlb using the builder
func NewRuncHugetlb(b *RuncHugetlb_builder) *RuncHugetlb {
	return b.Build()
}

// NewRuncHugetlbE creates a new RuncHugetlb using the builder with validation
func NewRuncHugetlbE(b *RuncHugetlb_builder) (*RuncHugetlb, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncNetworkInterface creates a new RuncNetworkInterface using the builder
func NewRuncNetworkInterface(b *RuncNetworkInterface_builder) *RuncNetworkInterface {
	return b.Build()
}

// NewRuncNetworkInterfaceE creates a new RuncNetworkInterface using the builder with validation
func NewRuncNetworkInterfaceE(b *RuncNetworkInterface_builder) (*RuncNetworkInterface, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncStats creates a new RuncStats using the builder
func NewRuncStats(b *RuncStats_builder) *RuncStats {
	return b.Build()
}

// NewRuncStatsE creates a new RuncStats using the builder with validation
func NewRuncStatsE(b *RuncStats_builder) (*RuncStats, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncStatsResponse creates a new RuncStatsResponse using the builder
func NewRuncStatsResponse(b *RuncStatsResponse_builder) *RuncStatsResponse {
	return b.Build()
}

// NewRuncStatsResponseE creates a new RuncStatsResponse using the builder with validation
func NewRuncStatsResponseE(b *RuncStatsResponse_builder) (*RuncStatsResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncPauseRequest creates a new RuncPauseRequest using the builder
func NewRuncPauseRequest(b *RuncPauseRequest_builder) *RuncPauseRequest {
	return b.Build()
}

// NewRuncPauseRequestE creates a new RuncPauseRequest using the builder with validation
func NewRuncPauseRequestE(b *RuncPauseRequest_builder) (*RuncPauseRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncPauseResponse creates a new RuncPauseResponse using the builder
func NewRuncPauseResponse(b *RuncPauseResponse_builder) *RuncPauseResponse {
	return b.Build()
}

// NewRuncPauseResponseE creates a new RuncPauseResponse using the builder with validation
func NewRuncPauseResponseE(b *RuncPauseResponse_builder) (*RuncPauseResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncResumeRequest creates a new RuncResumeRequest using the builder
func NewRuncResumeRequest(b *RuncResumeRequest_builder) *RuncResumeRequest {
	return b.Build()
}

// NewRuncResumeRequestE creates a new RuncResumeRequest using the builder with validation
func NewRuncResumeRequestE(b *RuncResumeRequest_builder) (*RuncResumeRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncResumeResponse creates a new RuncResumeResponse using the builder
func NewRuncResumeResponse(b *RuncResumeResponse_builder) *RuncResumeResponse {
	return b.Build()
}

// NewRuncResumeResponseE creates a new RuncResumeResponse using the builder with validation
func NewRuncResumeResponseE(b *RuncResumeResponse_builder) (*RuncResumeResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncPsRequest creates a new RuncPsRequest using the builder
func NewRuncPsRequest(b *RuncPsRequest_builder) *RuncPsRequest {
	return b.Build()
}

// NewRuncPsRequestE creates a new RuncPsRequest using the builder with validation
func NewRuncPsRequestE(b *RuncPsRequest_builder) (*RuncPsRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncPsResponse creates a new RuncPsResponse using the builder
func NewRuncPsResponse(b *RuncPsResponse_builder) *RuncPsResponse {
	return b.Build()
}

// NewRuncPsResponseE creates a new RuncPsResponse using the builder with validation
func NewRuncPsResponseE(b *RuncPsResponse_builder) (*RuncPsResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncTopRequest creates a new RuncTopRequest using the builder
func NewRuncTopRequest(b *RuncTopRequest_builder) *RuncTopRequest {
	return b.Build()
}

// NewRuncTopRequestE creates a new RuncTopRequest using the builder with validation
func NewRuncTopRequestE(b *RuncTopRequest_builder) (*RuncTopRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncTopResponse creates a new RuncTopResponse using the builder
func NewRuncTopResponse(b *RuncTopResponse_builder) *RuncTopResponse {
	return b.Build()
}

// NewRuncTopResponseE creates a new RuncTopResponse using the builder with validation
func NewRuncTopResponseE(b *RuncTopResponse_builder) (*RuncTopResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncProcessData creates a new RuncProcessData using the builder
func NewRuncProcessData(b *RuncProcessData_builder) *RuncProcessData {
	return b.Build()
}

// NewRuncProcessDataE creates a new RuncProcessData using the builder with validation
func NewRuncProcessDataE(b *RuncProcessData_builder) (*RuncProcessData, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncVersionRequest creates a new RuncVersionRequest using the builder
func NewRuncVersionRequest(b *RuncVersionRequest_builder) *RuncVersionRequest {
	return b.Build()
}

// NewRuncVersionRequestE creates a new RuncVersionRequest using the builder with validation
func NewRuncVersionRequestE(b *RuncVersionRequest_builder) (*RuncVersionRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncVersionResponse creates a new RuncVersionResponse using the builder
func NewRuncVersionResponse(b *RuncVersionResponse_builder) *RuncVersionResponse {
	return b.Build()
}

// NewRuncVersionResponseE creates a new RuncVersionResponse using the builder with validation
func NewRuncVersionResponseE(b *RuncVersionResponse_builder) (*RuncVersionResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncCheckpointAction creates a new RuncCheckpointAction using the builder
func NewRuncCheckpointAction(b *RuncCheckpointAction_builder) *RuncCheckpointAction {
	return b.Build()
}

// NewRuncCheckpointActionE creates a new RuncCheckpointAction using the builder with validation
func NewRuncCheckpointActionE(b *RuncCheckpointAction_builder) (*RuncCheckpointAction, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncCheckpointRequest creates a new RuncCheckpointRequest using the builder
func NewRuncCheckpointRequest(b *RuncCheckpointRequest_builder) *RuncCheckpointRequest {
	return b.Build()
}

// NewRuncCheckpointRequestE creates a new RuncCheckpointRequest using the builder with validation
func NewRuncCheckpointRequestE(b *RuncCheckpointRequest_builder) (*RuncCheckpointRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncConsoleSocket creates a new RuncConsoleSocket using the builder
func NewRuncConsoleSocket(b *RuncConsoleSocket_builder) *RuncConsoleSocket {
	return b.Build()
}

// NewRuncConsoleSocketE creates a new RuncConsoleSocket using the builder with validation
func NewRuncConsoleSocketE(b *RuncConsoleSocket_builder) (*RuncConsoleSocket, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewSetExecCommandOptions creates a new SetExecCommandOptions using the builder
func NewSetExecCommandOptions(b *SetExecCommandOptions_builder) *SetExecCommandOptions {
	return b.Build()
}

// NewSetExecCommandOptionsE creates a new SetExecCommandOptions using the builder with validation
func NewSetExecCommandOptionsE(b *SetExecCommandOptions_builder) (*SetExecCommandOptions, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncIO creates a new RuncIO using the builder
func NewRuncIO(b *RuncIO_builder) *RuncIO {
	return b.Build()
}

// NewRuncIOE creates a new RuncIO using the builder with validation
func NewRuncIOE(b *RuncIO_builder) (*RuncIO, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncCheckpointResponse creates a new RuncCheckpointResponse using the builder
func NewRuncCheckpointResponse(b *RuncCheckpointResponse_builder) *RuncCheckpointResponse {
	return b.Build()
}

// NewRuncCheckpointResponseE creates a new RuncCheckpointResponse using the builder with validation
func NewRuncCheckpointResponseE(b *RuncCheckpointResponse_builder) (*RuncCheckpointResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncRestoreRequest creates a new RuncRestoreRequest using the builder
func NewRuncRestoreRequest(b *RuncRestoreRequest_builder) *RuncRestoreRequest {
	return b.Build()
}

// NewRuncRestoreRequestE creates a new RuncRestoreRequest using the builder with validation
func NewRuncRestoreRequestE(b *RuncRestoreRequest_builder) (*RuncRestoreRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncRestoreResponse creates a new RuncRestoreResponse using the builder
func NewRuncRestoreResponse(b *RuncRestoreResponse_builder) *RuncRestoreResponse {
	return b.Build()
}

// NewRuncRestoreResponseE creates a new RuncRestoreResponse using the builder with validation
func NewRuncRestoreResponseE(b *RuncRestoreResponse_builder) (*RuncRestoreResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncCheckpointOptions creates a new RuncCheckpointOptions using the builder
func NewRuncCheckpointOptions(b *RuncCheckpointOptions_builder) *RuncCheckpointOptions {
	return b.Build()
}

// NewRuncCheckpointOptionsE creates a new RuncCheckpointOptions using the builder with validation
func NewRuncCheckpointOptionsE(b *RuncCheckpointOptions_builder) (*RuncCheckpointOptions, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncRestoreOptions creates a new RuncRestoreOptions using the builder
func NewRuncRestoreOptions(b *RuncRestoreOptions_builder) *RuncRestoreOptions {
	return b.Build()
}

// NewRuncRestoreOptionsE creates a new RuncRestoreOptions using the builder with validation
func NewRuncRestoreOptionsE(b *RuncRestoreOptions_builder) (*RuncRestoreOptions, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncEventsRequest creates a new RuncEventsRequest using the builder
func NewRuncEventsRequest(b *RuncEventsRequest_builder) *RuncEventsRequest {
	return b.Build()
}

// NewRuncEventsRequestE creates a new RuncEventsRequest using the builder with validation
func NewRuncEventsRequestE(b *RuncEventsRequest_builder) (*RuncEventsRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncEvent creates a new RuncEvent using the builder
func NewRuncEvent(b *RuncEvent_builder) *RuncEvent {
	return b.Build()
}

// NewRuncEventE creates a new RuncEvent using the builder with validation
func NewRuncEventE(b *RuncEvent_builder) (*RuncEvent, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncUpdateRequest creates a new RuncUpdateRequest using the builder
func NewRuncUpdateRequest(b *RuncUpdateRequest_builder) *RuncUpdateRequest {
	return b.Build()
}

// NewRuncUpdateRequestE creates a new RuncUpdateRequest using the builder with validation
func NewRuncUpdateRequestE(b *RuncUpdateRequest_builder) (*RuncUpdateRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncUpdateResponse creates a new RuncUpdateResponse using the builder
func NewRuncUpdateResponse(b *RuncUpdateResponse_builder) *RuncUpdateResponse {
	return b.Build()
}

// NewRuncUpdateResponseE creates a new RuncUpdateResponse using the builder with validation
func NewRuncUpdateResponseE(b *RuncUpdateResponse_builder) (*RuncUpdateResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewRuncLinuxResources creates a new RuncLinuxResources using the builder
func NewRuncLinuxResources(b *RuncLinuxResources_builder) *RuncLinuxResources {
	return b.Build()
}

// NewRuncLinuxResourcesE creates a new RuncLinuxResources using the builder with validation
func NewRuncLinuxResourcesE(b *RuncLinuxResources_builder) (*RuncLinuxResources, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}
