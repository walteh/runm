edition = "2023";

package runm.v1;

import "google/protobuf/duration.proto";
import "google/protobuf/go_features.proto";

option features.(pb.go).api_level = API_OPAQUE;
option features.field_presence = IMPLICIT;  // makes everything by default required, for optional set to EXPLICIT

service RuncService {
	// Ping checks if the service is alive
	rpc Ping(PingRequest) returns (PingResponse) {}


	// Create creates a new container
	rpc Create(RuncCreateRequest) returns (RuncCreateResponse) {}


	// Start will start an already created container
	rpc Start(RuncStartRequest) returns (RuncStartResponse) {}


	// Exec executes an additional process inside the container
	rpc Exec(RuncExecRequest) returns (RuncExecResponse) {}


	// Delete deletes the container
	rpc Delete(RuncDeleteRequest) returns (RuncDeleteResponse) {}


	// Kill sends the specified signal to the container
	rpc Kill(RuncKillRequest) returns (RuncKillResponse) {}


	// Pause the container with the provided id
	rpc Pause(RuncPauseRequest) returns (RuncPauseResponse) {}


	// Resume the container with the provided id
	rpc Resume(RuncResumeRequest) returns (RuncResumeResponse) {}


	// Ps lists all the processes inside the container returning their pids
	rpc Ps(RuncPsRequest) returns (RuncPsResponse) {}


	// Checkpoint checkpoints the container
	rpc Checkpoint(RuncCheckpointRequest) returns (RuncCheckpointResponse) {}


	// Restore restores the container from a checkpoint
	rpc Restore(RuncRestoreRequest) returns (RuncRestoreResponse) {}


	// Update updates the container resources
	rpc Update(RuncUpdateRequest) returns (RuncUpdateResponse) {}


	rpc NewTempConsoleSocket(RuncNewTempConsoleSocketRequest) returns (RuncNewTempConsoleSocketResponse) {}


	rpc ReadPidFile(RuncReadPidFileRequest) returns (RuncReadPidFileResponse) {}
}

service RuncExtrasService {
	rpc State(RuncStateRequest) returns (RuncStateResponse) {}


	rpc RuncRun(RuncRunRequest) returns (RuncRunResponse) {}


	rpc Stats(RuncStatsRequest) returns (RuncStatsResponse) {}


	rpc Events(RuncEventsRequest) returns (stream RuncEvent) {}


	rpc List(RuncListRequest) returns (RuncListResponse) {}


	rpc Version(RuncVersionRequest) returns (RuncVersionResponse) {}


	rpc Top(RuncTopRequest) returns (RuncTopResponse) {}
}

message RuncReadPidFileRequest {
	string path = 1;
}

message RuncReadPidFileResponse {
	int32  pid      = 1;
	string go_error = 2;
}

message RuncNewTempConsoleSocketRequest {}

message RuncNewTempConsoleSocketResponse {
	string console_reference_id = 1;
	string go_error             = 2;
}

message RuncCloseIORequest {
	uint64 io_reference_id = 1;
}

message RuncCloseIOResponse {}

message RuncLogFilePathRequest {}

message RuncLogFilePathResponse {
	string path = 1;
}

message PingRequest {}

message PingResponse {}

// List related messages
message RuncListRequest {
	string root = 1;
}

message RuncContainer {
	string              id                = 1;
	int32               pid               = 2;
	string              status            = 3;
	string              bundle            = 4;
	string              rootfs            = 5;
	int64               created_timestamp = 6;
	map<string, string> annotations       = 7;
}

message RuncListResponse {
	repeated RuncContainer containers = 1;
	string                 go_error   = 2;
}

// State related messages
message RuncStateRequest {
	string id = 1;
}

message RuncStateResponse {
	RuncContainer container = 1;
	string        go_error  = 2;
}

// Create related messages
message RuncCreateRequest {
	string            id      = 1;
	string            bundle  = 2;
	RuncCreateOptions options = 3;
}

message RuncCreateOptions {
	bool            detach               = 1;
	bool            no_pivot             = 2;
	bool            no_new_keyring       = 3;
	string          pid_file             = 4;
	repeated string extra_args           = 5;
	repeated string extra_files          = 6;
	string          console_reference_id = 7;
	string          io_reference_id      = 8;
}

message RuncCreateResponse {
	string go_error = 1;
}

// Start related messages
message RuncStartRequest {
	string id = 1;
}

message RuncStartResponse {
	string go_error = 1;
}

// Exec related messages

message RuncExecRequest {
	string          id      = 1;
	RuncProcessSpec spec    = 2;
	RuncExecOptions options = 3;
}

message RuncProcessSpec {
	bytes raw_json = 1;
}

message RuncExecOptions {
	bool            detach               = 1;
	string          pid_file             = 2;
	repeated string extra_args           = 3;
	string          io_reference_id      = 4;
	string          console_reference_id = 5;
}

message RuncExecResponse {
	string go_error = 1;
}

// Run related messages
message RuncRunRequest {
	string            id      = 1;
	string            bundle  = 2;
	RuncCreateOptions options = 3;
}

message RuncRunResponse {
	int32  status   = 1;
	string go_error = 2;
}

// Delete related messages
message RuncDeleteRequest {
	string            id      = 1;
	RuncDeleteOptions options = 2;
}

message RuncDeleteOptions {
	bool            force      = 1;
	repeated string extra_args = 2;
}

message RuncDeleteResponse {
	string go_error = 1;
}

// Kill related messages
message RuncKillRequest {
	string          id      = 1;
	int32           signal  = 2;
	RuncKillOptions options = 3;
}

message RuncKillOptions {
	bool            all        = 3;
	repeated string extra_args = 4;
}

message RuncKillResponse {
	string go_error = 1;
}

// Stats related messages
message RuncStatsRequest {
	string id = 1;
}

message RuncStats {
	bytes raw_json = 1;
}

message RuncStatsResponse {
	RuncStats stats    = 1;
	string    go_error = 2;
}

// Pause related messages
message RuncPauseRequest {
	string id = 1;
}

message RuncPauseResponse {
	string go_error = 1;
}

// Resume related messages
message RuncResumeRequest {
	string id = 1;
}

message RuncResumeResponse {
	string go_error = 1;
}

// Ps related messages
message RuncPsRequest {
	string id = 1;
}

message RuncPsResponse {
	repeated int32 pids     = 1;
	string         go_error = 2;
}

// Version related messages
message RuncVersionRequest {}

message RuncVersionResponse {
	string runc     = 1;
	string commit   = 2;
	string spec     = 3;
	string go_error = 4;
}

message RuncCheckpointAction {
	repeated string action = 1;
}

message RuncCheckpointRequest {
	string                        id      = 1;
	RuncCheckpointOptions         options = 2;
	repeated RuncCheckpointAction actions = 3;
}

message RuncConsoleSocket {
	string path = 1;
}

message SetExecCommandOptions {
	string              argc = 1;
	repeated string     argv = 2;
	map<string, string> env  = 3;
	string              cwd  = 4;
}

message RuncVsockIO {
	uint64 stdin_vsock_port  = 1;
	uint64 stdout_vsock_port = 2;
	uint64 stderr_vsock_port = 3;
	uint32 vsock_context_id  = 4;
}

message RuncUnixIO {
	string stdin_path  = 1;
	string stdout_path = 2;
	string stderr_path = 3;
}

message RuncNullIO {}

message RuncIO {
	string io_reference_id = 1;
	oneof io {
		RuncVsockIO vsock = 2;
		RuncUnixIO  unix  = 3;
		RuncNullIO  null  = 4;
	}
}

message RuncCheckpointResponse {
	string go_error = 1;
}

message RuncRestoreRequest {
	string             id      = 1;
	string             bundle  = 2;
	RuncRestoreOptions options = 3;
}

message RuncRestoreResponse {
	int32  status   = 1;
	string go_error = 2;
}

message RuncCheckpointOptions {
	string          image_path                  = 1;
	string          work_dir                    = 2;
	string          parent_path                 = 3;
	bool            allow_open_tcp              = 4;
	bool            allow_external_unix_sockets = 5;
	bool            allow_terminal              = 6;
	string          criu_page_server            = 7;
	bool            file_locks                  = 8;
	string          cgroups                     = 9;
	repeated string empty_namespaces            = 10;
	bool            lazy_pages                  = 11;
	string          status_file                 = 12;
	repeated string extra_args                  = 13;
}

message RuncRestoreOptions {
	RuncCheckpointOptions checkpoint_options   = 1;
	string                io_reference_id      = 2;
	bool                  detach               = 3;
	string                pid_file             = 4;
	bool                  no_subreaper         = 5;
	bool                  no_pivot             = 6;
	string                console_reference_id = 7;
	repeated string       extra_args           = 8;
}

message RuncEventsRequest {
	string                   id       = 1;
	google.protobuf.Duration duration = 2;
}

message RuncEvent {
	string    type  = 1;
	string    id    = 2;
	RuncStats stats = 3;
	string    err   = 4;
}

message RuncUpdateRequest {
	string             id        = 1;
	RuncLinuxResources resources = 2;
}

message RuncUpdateResponse {
	string go_error = 1;
}

message RuncLinuxResources {
	bytes raw_json = 1;
}

message RuncTopRequest {
	string id         = 1;
	string ps_options = 2;
}

message RuncTopResponse {
	RuncTopResults results  = 1;
	string         go_error = 2;
}

message RuncTopResults {
	repeated string           headers   = 1;
	repeated RuncTopProcesses processes = 2;
}

message RuncTopProcesses {
	repeated string process = 1;
}
