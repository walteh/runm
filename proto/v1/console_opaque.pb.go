// Code generated by protoc-gen-go-opaque-helpers. DO NOT EDIT.
// source: v1/console.proto

package runvv1

import (
	protovalidate "buf.build/go/protovalidate"
)

// NewCopyConsoleRequest creates a new CopyConsoleRequest using the builder
func NewCopyConsoleRequest(b *CopyConsoleRequest_builder) *CopyConsoleRequest {
	return b.Build()
}

// NewCopyConsoleRequestE creates a new CopyConsoleRequest using the builder with validation
func NewCopyConsoleRequestE(b *CopyConsoleRequest_builder) (*CopyConsoleRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewCopyConsoleResponse creates a new CopyConsoleResponse using the builder
func NewCopyConsoleResponse(b *CopyConsoleResponse_builder) *CopyConsoleResponse {
	return b.Build()
}

// NewCopyConsoleResponseE creates a new CopyConsoleResponse using the builder with validation
func NewCopyConsoleResponseE(b *CopyConsoleResponse_builder) (*CopyConsoleResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewShutdownConsoleRequest creates a new ShutdownConsoleRequest using the builder
func NewShutdownConsoleRequest(b *ShutdownConsoleRequest_builder) *ShutdownConsoleRequest {
	return b.Build()
}

// NewShutdownConsoleRequestE creates a new ShutdownConsoleRequest using the builder with validation
func NewShutdownConsoleRequestE(b *ShutdownConsoleRequest_builder) (*ShutdownConsoleRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewShutdownConsoleResponse creates a new ShutdownConsoleResponse using the builder
func NewShutdownConsoleResponse(b *ShutdownConsoleResponse_builder) *ShutdownConsoleResponse {
	return b.Build()
}

// NewShutdownConsoleResponseE creates a new ShutdownConsoleResponse using the builder with validation
func NewShutdownConsoleResponseE(b *ShutdownConsoleResponse_builder) (*ShutdownConsoleResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewClosePlatformRequest creates a new ClosePlatformRequest using the builder
func NewClosePlatformRequest(b *ClosePlatformRequest_builder) *ClosePlatformRequest {
	return b.Build()
}

// NewClosePlatformRequestE creates a new ClosePlatformRequest using the builder with validation
func NewClosePlatformRequestE(b *ClosePlatformRequest_builder) (*ClosePlatformRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewClosePlatformResponse creates a new ClosePlatformResponse using the builder
func NewClosePlatformResponse(b *ClosePlatformResponse_builder) *ClosePlatformResponse {
	return b.Build()
}

// NewClosePlatformResponseE creates a new ClosePlatformResponse using the builder with validation
func NewClosePlatformResponseE(b *ClosePlatformResponse_builder) (*ClosePlatformResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewConsoleReadRequest creates a new ConsoleReadRequest using the builder
func NewConsoleReadRequest(b *ConsoleReadRequest_builder) *ConsoleReadRequest {
	return b.Build()
}

// NewConsoleReadRequestE creates a new ConsoleReadRequest using the builder with validation
func NewConsoleReadRequestE(b *ConsoleReadRequest_builder) (*ConsoleReadRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewConsoleReadResponse creates a new ConsoleReadResponse using the builder
func NewConsoleReadResponse(b *ConsoleReadResponse_builder) *ConsoleReadResponse {
	return b.Build()
}

// NewConsoleReadResponseE creates a new ConsoleReadResponse using the builder with validation
func NewConsoleReadResponseE(b *ConsoleReadResponse_builder) (*ConsoleReadResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewConsoleWriteRequest creates a new ConsoleWriteRequest using the builder
func NewConsoleWriteRequest(b *ConsoleWriteRequest_builder) *ConsoleWriteRequest {
	return b.Build()
}

// NewConsoleWriteRequestE creates a new ConsoleWriteRequest using the builder with validation
func NewConsoleWriteRequestE(b *ConsoleWriteRequest_builder) (*ConsoleWriteRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewConsoleWriteResponse creates a new ConsoleWriteResponse using the builder
func NewConsoleWriteResponse(b *ConsoleWriteResponse_builder) *ConsoleWriteResponse {
	return b.Build()
}

// NewConsoleWriteResponseE creates a new ConsoleWriteResponse using the builder with validation
func NewConsoleWriteResponseE(b *ConsoleWriteResponse_builder) (*ConsoleWriteResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}
