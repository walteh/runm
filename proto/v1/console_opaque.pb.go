// Code generated by protoc-gen-go-opaque-helpers. DO NOT EDIT.
// source: v1/console.proto

package runvv1

import (
	protovalidate "buf.build/go/protovalidate"
)

// NewCopyConsoleRequest creates a new CopyConsoleRequest using the builder pattern
func NewCopyConsoleRequest(f func(*CopyConsoleRequest_builder)) *CopyConsoleRequest {
	b := &CopyConsoleRequest_builder{}
	f(b)
	return b.Build()
}

// NewCopyConsoleRequestE creates a new CopyConsoleRequest using the builder pattern with validation
func NewCopyConsoleRequestE(f func(*CopyConsoleRequest_builder)) (*CopyConsoleRequest, error) {
	m := NewCopyConsoleRequest(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewCopyConsoleResponse creates a new CopyConsoleResponse using the builder pattern
func NewCopyConsoleResponse(f func(*CopyConsoleResponse_builder)) *CopyConsoleResponse {
	b := &CopyConsoleResponse_builder{}
	f(b)
	return b.Build()
}

// NewCopyConsoleResponseE creates a new CopyConsoleResponse using the builder pattern with validation
func NewCopyConsoleResponseE(f func(*CopyConsoleResponse_builder)) (*CopyConsoleResponse, error) {
	m := NewCopyConsoleResponse(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewShutdownConsoleRequest creates a new ShutdownConsoleRequest using the builder pattern
func NewShutdownConsoleRequest(f func(*ShutdownConsoleRequest_builder)) *ShutdownConsoleRequest {
	b := &ShutdownConsoleRequest_builder{}
	f(b)
	return b.Build()
}

// NewShutdownConsoleRequestE creates a new ShutdownConsoleRequest using the builder pattern with validation
func NewShutdownConsoleRequestE(f func(*ShutdownConsoleRequest_builder)) (*ShutdownConsoleRequest, error) {
	m := NewShutdownConsoleRequest(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewShutdownConsoleResponse creates a new ShutdownConsoleResponse using the builder pattern
func NewShutdownConsoleResponse(f func(*ShutdownConsoleResponse_builder)) *ShutdownConsoleResponse {
	b := &ShutdownConsoleResponse_builder{}
	f(b)
	return b.Build()
}

// NewShutdownConsoleResponseE creates a new ShutdownConsoleResponse using the builder pattern with validation
func NewShutdownConsoleResponseE(f func(*ShutdownConsoleResponse_builder)) (*ShutdownConsoleResponse, error) {
	m := NewShutdownConsoleResponse(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewClosePlatformRequest creates a new ClosePlatformRequest using the builder pattern
func NewClosePlatformRequest(f func(*ClosePlatformRequest_builder)) *ClosePlatformRequest {
	b := &ClosePlatformRequest_builder{}
	f(b)
	return b.Build()
}

// NewClosePlatformRequestE creates a new ClosePlatformRequest using the builder pattern with validation
func NewClosePlatformRequestE(f func(*ClosePlatformRequest_builder)) (*ClosePlatformRequest, error) {
	m := NewClosePlatformRequest(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewClosePlatformResponse creates a new ClosePlatformResponse using the builder pattern
func NewClosePlatformResponse(f func(*ClosePlatformResponse_builder)) *ClosePlatformResponse {
	b := &ClosePlatformResponse_builder{}
	f(b)
	return b.Build()
}

// NewClosePlatformResponseE creates a new ClosePlatformResponse using the builder pattern with validation
func NewClosePlatformResponseE(f func(*ClosePlatformResponse_builder)) (*ClosePlatformResponse, error) {
	m := NewClosePlatformResponse(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewConsoleReadRequest creates a new ConsoleReadRequest using the builder pattern
func NewConsoleReadRequest(f func(*ConsoleReadRequest_builder)) *ConsoleReadRequest {
	b := &ConsoleReadRequest_builder{}
	f(b)
	return b.Build()
}

// NewConsoleReadRequestE creates a new ConsoleReadRequest using the builder pattern with validation
func NewConsoleReadRequestE(f func(*ConsoleReadRequest_builder)) (*ConsoleReadRequest, error) {
	m := NewConsoleReadRequest(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewConsoleReadResponse creates a new ConsoleReadResponse using the builder pattern
func NewConsoleReadResponse(f func(*ConsoleReadResponse_builder)) *ConsoleReadResponse {
	b := &ConsoleReadResponse_builder{}
	f(b)
	return b.Build()
}

// NewConsoleReadResponseE creates a new ConsoleReadResponse using the builder pattern with validation
func NewConsoleReadResponseE(f func(*ConsoleReadResponse_builder)) (*ConsoleReadResponse, error) {
	m := NewConsoleReadResponse(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewConsoleWriteRequest creates a new ConsoleWriteRequest using the builder pattern
func NewConsoleWriteRequest(f func(*ConsoleWriteRequest_builder)) *ConsoleWriteRequest {
	b := &ConsoleWriteRequest_builder{}
	f(b)
	return b.Build()
}

// NewConsoleWriteRequestE creates a new ConsoleWriteRequest using the builder pattern with validation
func NewConsoleWriteRequestE(f func(*ConsoleWriteRequest_builder)) (*ConsoleWriteRequest, error) {
	m := NewConsoleWriteRequest(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewConsoleWriteResponse creates a new ConsoleWriteResponse using the builder pattern
func NewConsoleWriteResponse(f func(*ConsoleWriteResponse_builder)) *ConsoleWriteResponse {
	b := &ConsoleWriteResponse_builder{}
	f(b)
	return b.Build()
}

// NewConsoleWriteResponseE creates a new ConsoleWriteResponse using the builder pattern with validation
func NewConsoleWriteResponseE(f func(*ConsoleWriteResponse_builder)) (*ConsoleWriteResponse, error) {
	m := NewConsoleWriteResponse(f)
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}
