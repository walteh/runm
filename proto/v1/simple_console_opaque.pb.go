// Code generated by protoc-gen-go-opaque-helpers. DO NOT EDIT.
// source: v1/simple_console.proto

package runvv1

import (
	protovalidate "buf.build/go/protovalidate"
)

// NewConsoleChunk creates a new ConsoleChunk using the builder
func NewConsoleChunk(b *ConsoleChunk_builder) *ConsoleChunk {
	return b.Build()
}

// NewConsoleChunkE creates a new ConsoleChunk using the builder with validation
func NewConsoleChunkE(b *ConsoleChunk_builder) (*ConsoleChunk, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewConsoleChunk_WithControl creates a new ConsoleChunk with the Control field set using the builder
func NewConsoleChunk_WithControl(innerBuilder *ControlMessage_builder) *ConsoleChunk {
	inner := NewControlMessage(innerBuilder)
	return NewConsoleChunk(&ConsoleChunk_builder{
		Control: inner,
	})
}

// NewConsoleChunk_WithControlE creates a new ConsoleChunk with the Control field set using the builder with validation
func NewConsoleChunk_WithControlE(innerBuilder *ControlMessage_builder) (*ConsoleChunk, error) {
	inner, err := NewControlMessageE(innerBuilder)
	if err != nil {
		return nil, err
	}
	m := NewConsoleChunk(&ConsoleChunk_builder{
		Control: inner,
	})
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewControlMessage creates a new ControlMessage using the builder
func NewControlMessage(b *ControlMessage_builder) *ControlMessage {
	return b.Build()
}

// NewControlMessageE creates a new ControlMessage using the builder with validation
func NewControlMessageE(b *ControlMessage_builder) (*ControlMessage, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewControlMessage_WithResize creates a new ControlMessage with the Resize field set using the builder
func NewControlMessage_WithResize(innerBuilder *WindowResize_builder) *ControlMessage {
	inner := NewWindowResize(innerBuilder)
	return NewControlMessage(&ControlMessage_builder{
		Resize: inner,
	})
}

// NewControlMessage_WithResizeE creates a new ControlMessage with the Resize field set using the builder with validation
func NewControlMessage_WithResizeE(innerBuilder *WindowResize_builder) (*ControlMessage, error) {
	inner, err := NewWindowResizeE(innerBuilder)
	if err != nil {
		return nil, err
	}
	m := NewControlMessage(&ControlMessage_builder{
		Resize: inner,
	})
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewControlMessage_WithEnv creates a new ControlMessage with the Env field set using the builder
func NewControlMessage_WithEnv(innerBuilder *EnvVar_builder) *ControlMessage {
	inner := NewEnvVar(innerBuilder)
	return NewControlMessage(&ControlMessage_builder{
		Env: inner,
	})
}

// NewControlMessage_WithEnvE creates a new ControlMessage with the Env field set using the builder with validation
func NewControlMessage_WithEnvE(innerBuilder *EnvVar_builder) (*ControlMessage, error) {
	inner, err := NewEnvVarE(innerBuilder)
	if err != nil {
		return nil, err
	}
	m := NewControlMessage(&ControlMessage_builder{
		Env: inner,
	})
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewControlMessage_WithExit creates a new ControlMessage with the Exit field set using the builder
func NewControlMessage_WithExit(innerBuilder *ExitStatus_builder) *ControlMessage {
	inner := NewExitStatus(innerBuilder)
	return NewControlMessage(&ControlMessage_builder{
		Exit: inner,
	})
}

// NewControlMessage_WithExitE creates a new ControlMessage with the Exit field set using the builder with validation
func NewControlMessage_WithExitE(innerBuilder *ExitStatus_builder) (*ControlMessage, error) {
	inner, err := NewExitStatusE(innerBuilder)
	if err != nil {
		return nil, err
	}
	m := NewControlMessage(&ControlMessage_builder{
		Exit: inner,
	})
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewControlMessage_WithError creates a new ControlMessage with the Error field set using the builder
func NewControlMessage_WithError(innerBuilder *ErrorMessage_builder) *ControlMessage {
	inner := NewErrorMessage(innerBuilder)
	return NewControlMessage(&ControlMessage_builder{
		Error: inner,
	})
}

// NewControlMessage_WithErrorE creates a new ControlMessage with the Error field set using the builder with validation
func NewControlMessage_WithErrorE(innerBuilder *ErrorMessage_builder) (*ControlMessage, error) {
	inner, err := NewErrorMessageE(innerBuilder)
	if err != nil {
		return nil, err
	}
	m := NewControlMessage(&ControlMessage_builder{
		Error: inner,
	})
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewWindowResize creates a new WindowResize using the builder
func NewWindowResize(b *WindowResize_builder) *WindowResize {
	return b.Build()
}

// NewWindowResizeE creates a new WindowResize using the builder with validation
func NewWindowResizeE(b *WindowResize_builder) (*WindowResize, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewEnvVar creates a new EnvVar using the builder
func NewEnvVar(b *EnvVar_builder) *EnvVar {
	return b.Build()
}

// NewEnvVarE creates a new EnvVar using the builder with validation
func NewEnvVarE(b *EnvVar_builder) (*EnvVar, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewExitStatus creates a new ExitStatus using the builder
func NewExitStatus(b *ExitStatus_builder) *ExitStatus {
	return b.Build()
}

// NewExitStatusE creates a new ExitStatus using the builder with validation
func NewExitStatusE(b *ExitStatus_builder) (*ExitStatus, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewErrorMessage creates a new ErrorMessage using the builder
func NewErrorMessage(b *ErrorMessage_builder) *ErrorMessage {
	return b.Build()
}

// NewErrorMessageE creates a new ErrorMessage using the builder with validation
func NewErrorMessageE(b *ErrorMessage_builder) (*ErrorMessage, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewSimpleCopyConsoleRequest creates a new SimpleCopyConsoleRequest using the builder
func NewSimpleCopyConsoleRequest(b *SimpleCopyConsoleRequest_builder) *SimpleCopyConsoleRequest {
	return b.Build()
}

// NewSimpleCopyConsoleRequestE creates a new SimpleCopyConsoleRequest using the builder with validation
func NewSimpleCopyConsoleRequestE(b *SimpleCopyConsoleRequest_builder) (*SimpleCopyConsoleRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewSimpleCopyConsoleResponse creates a new SimpleCopyConsoleResponse using the builder
func NewSimpleCopyConsoleResponse(b *SimpleCopyConsoleResponse_builder) *SimpleCopyConsoleResponse {
	return b.Build()
}

// NewSimpleCopyConsoleResponseE creates a new SimpleCopyConsoleResponse using the builder with validation
func NewSimpleCopyConsoleResponseE(b *SimpleCopyConsoleResponse_builder) (*SimpleCopyConsoleResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewSimpleShutdownConsoleRequest creates a new SimpleShutdownConsoleRequest using the builder
func NewSimpleShutdownConsoleRequest(b *SimpleShutdownConsoleRequest_builder) *SimpleShutdownConsoleRequest {
	return b.Build()
}

// NewSimpleShutdownConsoleRequestE creates a new SimpleShutdownConsoleRequest using the builder with validation
func NewSimpleShutdownConsoleRequestE(b *SimpleShutdownConsoleRequest_builder) (*SimpleShutdownConsoleRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewSimpleShutdownConsoleResponse creates a new SimpleShutdownConsoleResponse using the builder
func NewSimpleShutdownConsoleResponse(b *SimpleShutdownConsoleResponse_builder) *SimpleShutdownConsoleResponse {
	return b.Build()
}

// NewSimpleShutdownConsoleResponseE creates a new SimpleShutdownConsoleResponse using the builder with validation
func NewSimpleShutdownConsoleResponseE(b *SimpleShutdownConsoleResponse_builder) (*SimpleShutdownConsoleResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewSimpleClosePlatformRequest creates a new SimpleClosePlatformRequest using the builder
func NewSimpleClosePlatformRequest(b *SimpleClosePlatformRequest_builder) *SimpleClosePlatformRequest {
	return b.Build()
}

// NewSimpleClosePlatformRequestE creates a new SimpleClosePlatformRequest using the builder with validation
func NewSimpleClosePlatformRequestE(b *SimpleClosePlatformRequest_builder) (*SimpleClosePlatformRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewSimpleClosePlatformResponse creates a new SimpleClosePlatformResponse using the builder
func NewSimpleClosePlatformResponse(b *SimpleClosePlatformResponse_builder) *SimpleClosePlatformResponse {
	return b.Build()
}

// NewSimpleClosePlatformResponseE creates a new SimpleClosePlatformResponse using the builder with validation
func NewSimpleClosePlatformResponseE(b *SimpleClosePlatformResponse_builder) (*SimpleClosePlatformResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}
