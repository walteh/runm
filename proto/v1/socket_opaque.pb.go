// Code generated by protoc-gen-go-opaque-helpers. DO NOT EDIT.
// source: v1/socket.proto

package runmv1

import (
	protovalidate "buf.build/go/protovalidate"
)

// NewAllocateSocketStreamRequest creates a new AllocateSocketStreamRequest using the builder
func NewAllocateSocketStreamRequest(b *AllocateSocketStreamRequest_builder) *AllocateSocketStreamRequest {
	return b.Build()
}

// NewAllocateSocketStreamRequestE creates a new AllocateSocketStreamRequest using the builder with validation
func NewAllocateSocketStreamRequestE(b *AllocateSocketStreamRequest_builder) (*AllocateSocketStreamRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewAllocateSocketStreamResponse creates a new AllocateSocketStreamResponse using the builder
func NewAllocateSocketStreamResponse(b *AllocateSocketStreamResponse_builder) *AllocateSocketStreamResponse {
	return b.Build()
}

// NewAllocateSocketStreamResponseE creates a new AllocateSocketStreamResponse using the builder with validation
func NewAllocateSocketStreamResponseE(b *AllocateSocketStreamResponse_builder) (*AllocateSocketStreamResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewAllocateIORequest creates a new AllocateIORequest using the builder
func NewAllocateIORequest(b *AllocateIORequest_builder) *AllocateIORequest {
	return b.Build()
}

// NewAllocateIORequestE creates a new AllocateIORequest using the builder with validation
func NewAllocateIORequestE(b *AllocateIORequest_builder) (*AllocateIORequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewAllocateIOResponse creates a new AllocateIOResponse using the builder
func NewAllocateIOResponse(b *AllocateIOResponse_builder) *AllocateIOResponse {
	return b.Build()
}

// NewAllocateIOResponseE creates a new AllocateIOResponse using the builder with validation
func NewAllocateIOResponseE(b *AllocateIOResponse_builder) (*AllocateIOResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewAllocateConsoleRequest creates a new AllocateConsoleRequest using the builder
func NewAllocateConsoleRequest(b *AllocateConsoleRequest_builder) *AllocateConsoleRequest {
	return b.Build()
}

// NewAllocateConsoleRequestE creates a new AllocateConsoleRequest using the builder with validation
func NewAllocateConsoleRequestE(b *AllocateConsoleRequest_builder) (*AllocateConsoleRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewAllocateConsoleResponse creates a new AllocateConsoleResponse using the builder
func NewAllocateConsoleResponse(b *AllocateConsoleResponse_builder) *AllocateConsoleResponse {
	return b.Build()
}

// NewAllocateConsoleResponseE creates a new AllocateConsoleResponse using the builder with validation
func NewAllocateConsoleResponseE(b *AllocateConsoleResponse_builder) (*AllocateConsoleResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewCloseSocketsRequest creates a new CloseSocketsRequest using the builder
func NewCloseSocketsRequest(b *CloseSocketsRequest_builder) *CloseSocketsRequest {
	return b.Build()
}

// NewCloseSocketsRequestE creates a new CloseSocketsRequest using the builder with validation
func NewCloseSocketsRequestE(b *CloseSocketsRequest_builder) (*CloseSocketsRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewCloseSocketsResponse creates a new CloseSocketsResponse using the builder
func NewCloseSocketsResponse(b *CloseSocketsResponse_builder) *CloseSocketsResponse {
	return b.Build()
}

// NewCloseSocketsResponseE creates a new CloseSocketsResponse using the builder with validation
func NewCloseSocketsResponseE(b *CloseSocketsResponse_builder) (*CloseSocketsResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewAllocateSocketsRequest creates a new AllocateSocketsRequest using the builder
func NewAllocateSocketsRequest(b *AllocateSocketsRequest_builder) *AllocateSocketsRequest {
	return b.Build()
}

// NewAllocateSocketsRequestE creates a new AllocateSocketsRequest using the builder with validation
func NewAllocateSocketsRequestE(b *AllocateSocketsRequest_builder) (*AllocateSocketsRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewAllocateSocketsResponse creates a new AllocateSocketsResponse using the builder
func NewAllocateSocketsResponse(b *AllocateSocketsResponse_builder) *AllocateSocketsResponse {
	return b.Build()
}

// NewAllocateSocketsResponseE creates a new AllocateSocketsResponse using the builder with validation
func NewAllocateSocketsResponseE(b *AllocateSocketsResponse_builder) (*AllocateSocketsResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewBindIOToSocketsRequest creates a new BindIOToSocketsRequest using the builder
func NewBindIOToSocketsRequest(b *BindIOToSocketsRequest_builder) *BindIOToSocketsRequest {
	return b.Build()
}

// NewBindIOToSocketsRequestE creates a new BindIOToSocketsRequest using the builder with validation
func NewBindIOToSocketsRequestE(b *BindIOToSocketsRequest_builder) (*BindIOToSocketsRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewBindIOToSocketsResponse creates a new BindIOToSocketsResponse using the builder
func NewBindIOToSocketsResponse(b *BindIOToSocketsResponse_builder) *BindIOToSocketsResponse {
	return b.Build()
}

// NewBindIOToSocketsResponseE creates a new BindIOToSocketsResponse using the builder with validation
func NewBindIOToSocketsResponseE(b *BindIOToSocketsResponse_builder) (*BindIOToSocketsResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewBindConsoleToSocketRequest creates a new BindConsoleToSocketRequest using the builder
func NewBindConsoleToSocketRequest(b *BindConsoleToSocketRequest_builder) *BindConsoleToSocketRequest {
	return b.Build()
}

// NewBindConsoleToSocketRequestE creates a new BindConsoleToSocketRequest using the builder with validation
func NewBindConsoleToSocketRequestE(b *BindConsoleToSocketRequest_builder) (*BindConsoleToSocketRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewBindConsoleToSocketResponse creates a new BindConsoleToSocketResponse using the builder
func NewBindConsoleToSocketResponse(b *BindConsoleToSocketResponse_builder) *BindConsoleToSocketResponse {
	return b.Build()
}

// NewBindConsoleToSocketResponseE creates a new BindConsoleToSocketResponse using the builder with validation
func NewBindConsoleToSocketResponseE(b *BindConsoleToSocketResponse_builder) (*BindConsoleToSocketResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewAllocateSocketRequest creates a new AllocateSocketRequest using the builder
func NewAllocateSocketRequest(b *AllocateSocketRequest_builder) *AllocateSocketRequest {
	return b.Build()
}

// NewAllocateSocketRequestE creates a new AllocateSocketRequest using the builder with validation
func NewAllocateSocketRequestE(b *AllocateSocketRequest_builder) (*AllocateSocketRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewAllocateSocketResponse creates a new AllocateSocketResponse using the builder
func NewAllocateSocketResponse(b *AllocateSocketResponse_builder) *AllocateSocketResponse {
	return b.Build()
}

// NewAllocateSocketResponseE creates a new AllocateSocketResponse using the builder with validation
func NewAllocateSocketResponseE(b *AllocateSocketResponse_builder) (*AllocateSocketResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewCloseSocketRequest creates a new CloseSocketRequest using the builder
func NewCloseSocketRequest(b *CloseSocketRequest_builder) *CloseSocketRequest {
	return b.Build()
}

// NewCloseSocketRequestE creates a new CloseSocketRequest using the builder with validation
func NewCloseSocketRequestE(b *CloseSocketRequest_builder) (*CloseSocketRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewCloseSocketResponse creates a new CloseSocketResponse using the builder
func NewCloseSocketResponse(b *CloseSocketResponse_builder) *CloseSocketResponse {
	return b.Build()
}

// NewCloseSocketResponseE creates a new CloseSocketResponse using the builder with validation
func NewCloseSocketResponseE(b *CloseSocketResponse_builder) (*CloseSocketResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewCloseIORequest creates a new CloseIORequest using the builder
func NewCloseIORequest(b *CloseIORequest_builder) *CloseIORequest {
	return b.Build()
}

// NewCloseIORequestE creates a new CloseIORequest using the builder with validation
func NewCloseIORequestE(b *CloseIORequest_builder) (*CloseIORequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewCloseIOResponse creates a new CloseIOResponse using the builder
func NewCloseIOResponse(b *CloseIOResponse_builder) *CloseIOResponse {
	return b.Build()
}

// NewCloseIOResponseE creates a new CloseIOResponse using the builder with validation
func NewCloseIOResponseE(b *CloseIOResponse_builder) (*CloseIOResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewCloseConsoleRequest creates a new CloseConsoleRequest using the builder
func NewCloseConsoleRequest(b *CloseConsoleRequest_builder) *CloseConsoleRequest {
	return b.Build()
}

// NewCloseConsoleRequestE creates a new CloseConsoleRequest using the builder with validation
func NewCloseConsoleRequestE(b *CloseConsoleRequest_builder) (*CloseConsoleRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewCloseConsoleResponse creates a new CloseConsoleResponse using the builder
func NewCloseConsoleResponse(b *CloseConsoleResponse_builder) *CloseConsoleResponse {
	return b.Build()
}

// NewCloseConsoleResponseE creates a new CloseConsoleResponse using the builder with validation
func NewCloseConsoleResponseE(b *CloseConsoleResponse_builder) (*CloseConsoleResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}
