// Code generated by protoc-gen-go-ttrpc. DO NOT EDIT.
// source: v1/console.proto
package runvv1

import (
	context "context"
	ttrpc "github.com/containerd/ttrpc"
)

type TTRPCConsoleProxyServiceService interface {
	Poll(context.Context, *PollRequest) (*PollResponse, error)
}

func RegisterTTRPCConsoleProxyServiceService(srv *ttrpc.Server, svc TTRPCConsoleProxyServiceService) {
	srv.RegisterService("runv.v1.ConsoleProxyService", &ttrpc.ServiceDesc{
		Methods: map[string]ttrpc.Method{
			"Poll": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
				var req PollRequest
				if err := unmarshal(&req); err != nil {
					return nil, err
				}
				return svc.Poll(ctx, &req)
			},
		},
	})
}

type ttrpcconsoleproxyserviceClient struct {
	client *ttrpc.Client
}

func NewTTRPCConsoleProxyServiceClient(client *ttrpc.Client) TTRPCConsoleProxyServiceService {
	return &ttrpcconsoleproxyserviceClient{
		client: client,
	}
}

func (c *ttrpcconsoleproxyserviceClient) Poll(ctx context.Context, req *PollRequest) (*PollResponse, error) {
	var resp PollResponse
	if err := c.client.Call(ctx, "runv.v1.ConsoleProxyService", "Poll", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}
