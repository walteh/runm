// Code generated by protoc-gen-go-opaque-helpers. DO NOT EDIT.
// source: v1/epoll.proto

package runvv1

import (
	protovalidate "buf.build/go/protovalidate"
)

// NewAddRequest creates a new AddRequest using the builder
func NewAddRequest(b *AddRequest_builder) *AddRequest {
	return b.Build()
}

// NewAddRequestE creates a new AddRequest using the builder with validation
func NewAddRequestE(b *AddRequest_builder) (*AddRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewAddResponse creates a new AddResponse using the builder
func NewAddResponse(b *AddResponse_builder) *AddResponse {
	return b.Build()
}

// NewAddResponseE creates a new AddResponse using the builder with validation
func NewAddResponseE(b *AddResponse_builder) (*AddResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewWaitRequest creates a new WaitRequest using the builder
func NewWaitRequest(b *WaitRequest_builder) *WaitRequest {
	return b.Build()
}

// NewWaitRequestE creates a new WaitRequest using the builder with validation
func NewWaitRequestE(b *WaitRequest_builder) (*WaitRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewWaitResponse creates a new WaitResponse using the builder
func NewWaitResponse(b *WaitResponse_builder) *WaitResponse {
	return b.Build()
}

// NewWaitResponseE creates a new WaitResponse using the builder with validation
func NewWaitResponseE(b *WaitResponse_builder) (*WaitResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewCloseConsoleRequest creates a new CloseConsoleRequest using the builder
func NewCloseConsoleRequest(b *CloseConsoleRequest_builder) *CloseConsoleRequest {
	return b.Build()
}

// NewCloseConsoleRequestE creates a new CloseConsoleRequest using the builder with validation
func NewCloseConsoleRequestE(b *CloseConsoleRequest_builder) (*CloseConsoleRequest, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewCloseConsoleResponse creates a new CloseConsoleResponse using the builder
func NewCloseConsoleResponse(b *CloseConsoleResponse_builder) *CloseConsoleResponse {
	return b.Build()
}

// NewCloseConsoleResponseE creates a new CloseConsoleResponse using the builder with validation
func NewCloseConsoleResponseE(b *CloseConsoleResponse_builder) (*CloseConsoleResponse, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewEpollEvent creates a new EpollEvent using the builder
func NewEpollEvent(b *EpollEvent_builder) *EpollEvent {
	return b.Build()
}

// NewEpollEventE creates a new EpollEvent using the builder with validation
func NewEpollEventE(b *EpollEvent_builder) (*EpollEvent, error) {
	m := b.Build()
	if err := protovalidate.Validate(m); err != nil {
		return nil, err
	}
	return m, nil
}
